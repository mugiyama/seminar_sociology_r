[["index.html", "社会調査データ分析のためのRの手引き まえがき", " 社会調査データ分析のためのRの手引き Ryota Mugiyama (Department of Political Studies, Gakushuin University) 2021-11-04 まえがき 本資料は学習院大学法学部政治学科で開講される「社会学演習」の授業で使用する補足資料です。Rでのデータ加工や分析方法について、授業のなかで出た疑問点などをストックしていくことで、くり返し使える辞書的な位置づけを目指しています。 本資料では説明のためのサンプルデータとしてOECDが実施しているPIAAC (Programme for the International Assessment of Adult Competencies)の日本版データを利用しています。データは上記ウェブサイトから誰でもダウンロード可能です。このデータから、以下の条件に該当する対象者を抽出したデータを使っています。 25-64歳 armed forces以外の職業に従事し、かつ職業（ISCO 1-digit）が無回答でない 最終学歴を回答している 本資料は上記データをもとに順次コードを実行して結果を照合する、というタイプの教科書ではありません。たとえば変数名などは説明にとってわかりやすいようにもともとのデータから変えたりしています。あくまでも、コードなどを参考にして、自分のデータに適用してもらう、ということを目的にしています。 Rの基礎などについてはたくさんの優れた書籍やウェブサイトがあるのでそれらを参考にしてください。資料末尾に、参考書籍やウェブサイトへのリンクを載せています。 この資料はまったくの未完成で、内容は不定期に更新されます。 "],["preparation.html", "Chapter 1 Rの基礎と下準備 1.1 プロジェクトの作成 1.2 基本操作 1.3 パッケージのインストール 1.4 パイプ記法", " Chapter 1 Rの基礎と下準備 1.1 プロジェクトの作成 1.2 基本操作 1.3 パッケージのインストール install.packages()はゲームソフトを購入（無料ですが）するようなもの。実際にそのソフトに入っているコンテンツを使うためには、ソフトをセットしないといけない。その際には、library()を用いる。 本資料では以下のパッケージを使用する。今まとめてインストールしておくと楽かと思います。 install.packages(&quot;tidyverse&quot;) install.packages(&quot;haven&quot;) install.packages(&quot;gtsummary&quot;) install.packages(&quot;dagitty&quot;) install.packages(&quot;ggdag&quot;) install.packages(&quot;estimatr&quot;) install.packages(&quot;modelsummary&quot;) install.packages(&quot;labelled&quot;) とくに重要なのがtidyverseパッケージ。以下の8つのパッケージをまとめたパッケージ群であり、どれもよく使うものなので、何らかの分析をする際にはほとんど常にlibrary(tidyverse)を実行しておくのがよい。 ggplot2 tibble tidyr readr purrr dplyr stringr forcats 1.4 パイプ記法 head(iris) ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3.0 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5.0 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa mean(iris$Sepal.Length) ## [1] 5.843333 iris %&gt;% summarize(mean = mean(Sepal.Length)) ## mean ## 1 5.843333 "],["import.html", "Chapter 2 データの読み込み", " Chapter 2 データの読み込み "],["handling.html", "Chapter 3 データの加工 3.1 サンプルの限定 3.2 変数の作成 3.3 変数の操作化についてのtips", " Chapter 3 データの加工 以下の記述はすでにtidyverseパッケージを読み込んでおり、また読み込んだデータをpiaacというデータフレームに入れていることを前提とします。データフレームの名前はpiaacである必要はありません。以下のようなコードを実行していると思います。 library(tidyverse) piaac &lt;- read_csv(&quot;data/piaac.csv&quot;) 3.1 サンプルの限定 関心によっては、若年の人だけ分析したいとか、高齢の人だけ分析したいとか、女性（男性）だけ分析したいというときがある。それ以外にも、使う変数にNAが含まれているケースをあらかじめ除外するということはふつうにある。このようなときには、filter()を使う。 性別（gender）が男性のケースのみを抽出し、抽出したデータに新しい名前（piaac_male）をつける。 piaac_male &lt;- piaac %&gt;% filter(gender == &quot;男性&quot;) 年齢が25歳以上34歳以下のケースのみを抽出し、抽出したデータに新しい名前（piaac_young）をつける。 piaac_young &lt;- piaac %&gt;% filter(age &gt;= 25 &amp; age &lt;= 34) 条件記号の意味は次の通り。 条件記号 意味 コード例 コード例の意味 == 等しい age == 25 年齢が25に等しい != ではない age != 25 年齢が25ではない &gt; より大きい age &gt; 25 年齢が25より大きい &lt; より小さい age &lt; 25 年齢が25より小さい &gt;= 以上 age &gt;= 25 年齢が25以上（25を含む） &lt;= 以下 age &lt;= 25 年齢が25以下（25を含む） &amp; かつ age &gt;= 25 &amp; age &lt;= 54 年齢が25以上54以下 | または age &lt; 35 | age &gt; 54 年齢が35より小さいまたは54より大きい 3.2 変数の作成 3.2.1 新たな変数を作成：mutate() データ操作の基本は、すでにある変数を書き換えたりして、自分の関心に即した新しい変数を作ることである。このときに使用するのがmutate()。 例1：1週間の労働時間を尋ねた変数workhourを5で割って、平日1日あたりの労働時間を計算する。 piaac &lt;- piaac %&gt;% mutate(workhour_day = workhour / 5) 例2：1ずつ増える変数を作成する（例えば新しい個人idなどを振ったりしたいときに使う） piaac &lt;- piaac %&gt;% mutate(id = 1:n()) n() はデータフレーム内の行数を返す関数。以上の例で作成した変数は次のようになっている： piaac %&gt;% select(workhour, workhour_day, id) %&gt;% # select()についてはこのあと解説があります head() ## # A tibble: 6 x 3 ## workhour workhour_day id ## &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 48 9.6 1 ## 2 60 12 2 ## 3 50 10 3 ## 4 60 12 4 ## 5 40 8 5 ## 6 60 12 6 3.2.2 条件の指定：if_else() 実際にmutate()で既存の変数の値を書き換えたりする場合には、カテゴリをまとめたり、複数の変数を組み合わせて新しい変数を作成したりすることが多い。そこでよく使う関数がif_else()、case_when()、factor()の3つだ。 if_else()は、条件を指定し、その条件に合う場合と合わない場合の値を返す関数。if_else(条件, 条件に合う場合の値, 条件に合わない場合の値)、というふうに使う。 piaac &lt;- piaac %&gt;% mutate(univ = if_else(educ == &quot;大学大学院&quot;, &quot;大卒&quot;, &quot;非大卒&quot;)) piaac %&gt;% with(table(educ, univ)) #正しくできたか確認 ## univ ## educ 大卒 非大卒 ## 中学 0 316 ## 高校 0 1211 ## 短大高専 0 827 ## 大学大学院 1065 0 3.2.3 複数条件の指定：case_when() たとえば、年齢を10歳区切りにして比較をしたいとする。このときには、複数条件を指定して値を書き換えるコマンドである、case_when()をつかうとよい。 piaac %&gt;% select(age) %&gt;% summary() #年齢の分布を確認 ## age ## Min. :25.00 ## 1st Qu.:36.00 ## Median :44.00 ## Mean :44.71 ## 3rd Qu.:54.00 ## Max. :64.00 piaac &lt;- piaac %&gt;% mutate(agegroup = case_when( 25 &lt;= age &amp; age &lt;= 34 ~ &quot;25-34歳&quot;, 35 &lt;= age &amp; age &lt;= 44 ~ &quot;35-44歳&quot;, 45 &lt;= age &amp; age &lt;= 54 ~ &quot;45-54歳&quot;, 55 &lt;= age &amp; age &lt;= 64 ~ &quot;55-64歳&quot; )) ちゃんとできたかを確認。 piaac %&gt;% with(table(age, agegroup)) ## agegroup ## age 25-34歳 35-44歳 45-54歳 55-64歳 ## 25 55 0 0 0 ## 26 66 0 0 0 ## 27 65 0 0 0 ## 28 65 0 0 0 ## 29 82 0 0 0 ## 30 74 0 0 0 ## 31 77 0 0 0 ## 32 74 0 0 0 ## 33 88 0 0 0 ## 34 86 0 0 0 ## 35 0 101 0 0 ## 36 0 101 0 0 ## 37 0 104 0 0 ## 38 0 114 0 0 ## 39 0 108 0 0 ## 40 0 97 0 0 ## 41 0 86 0 0 ## 42 0 89 0 0 ## 43 0 99 0 0 ## 44 0 96 0 0 ## 45 0 0 76 0 ## 46 0 0 107 0 ## 47 0 0 97 0 ## 48 0 0 86 0 ## 49 0 0 93 0 ## 50 0 0 73 0 ## 51 0 0 78 0 ## 52 0 0 87 0 ## 53 0 0 92 0 ## 54 0 0 82 0 ## 55 0 0 0 87 ## 56 0 0 0 82 ## 57 0 0 0 65 ## 58 0 0 0 107 ## 59 0 0 0 76 ## 60 0 0 0 95 ## 61 0 0 0 76 ## 62 0 0 0 77 ## 63 0 0 0 78 ## 64 0 0 0 78 3.2.4 カテゴリ変数へ変換：factor() 職場（事業所単位）で何人の従業員が働いているかを尋ねた質問項目（estsize）があるとする。 選択肢 調査票の番号 1-10人 1 11-50人 2 51-250人 3 251-1000人 4 1001人以上 5 piaac %&gt;% with(table(estsize)) ## estsize ## 1 2 3 4 5 ## 739 967 754 356 226 この数値だけでは、何番が何を指しているのかよくわからない。そこで、この変数をfactorに変換した変数estsize_fctを作成する。 piaac &lt;- piaac %&gt;% mutate(estsize_fct = factor(estsize, levels = 1:5, labels = c(&quot;1-10人&quot;, &quot;11-50人&quot;, &quot;51-250人&quot;, &quot;251-1000人&quot;, &quot;1001人以上&quot;))) 結果を確認： piaac %&gt;% with(table(estsize_fct)) ## estsize_fct ## 1-10人 11-50人 51-250人 251-1000人 1001人以上 ## 739 967 754 356 226 新しくカテゴリ変数を作るとき、カテゴリの順序が意図していたものとは違う順序になってしまうことがある。これは、文字列の場合はアルファベット順、日本語の場合はshift-jis順で並んでしまうことによる。たとえば、1週間の労働時間（workhour）に関する変数をもとに、労働時間の長さ別に分けたカテゴリ変数を作成したいと思ったとする。case_when() を使って作成すると、意図していた順序とは違ったバラバラの順番になってしまう。 piaac &lt;- piaac %&gt;% mutate(workhour_fct = case_when( workhour &lt; 35 ~ &quot;短時間&quot;, workhour &gt;= 35 &amp; workhour &lt;= 49 ~ &quot;通常&quot;, workhour &gt;= 50 &amp; workhour &lt;= 59 ~ &quot;準長時間&quot;, workhour &gt;= 60 ~ &quot;長時間&quot; )) piaac %&gt;% with(table(workhour_fct)) ## workhour_fct ## 準長時間 短時間 長時間 通常 ## 598 766 372 1671 このような場合には、いったん数値の変数を挟んでからfactor() を使って変数を作成することで、順番がばらばらになってしまうのを防ぐことができる。 piaac &lt;- piaac %&gt;% mutate(workhour_fct = case_when( workhour &lt; 35 ~ 1, workhour &gt;= 35 &amp; workhour &lt;= 49 ~ 2, workhour &gt;= 50 &amp; workhour &lt;= 59 ~ 3, workhour &gt;= 60 ~ 4 )) %&gt;% mutate(workhour_fct = factor(workhour_fct, levels = 1:4, labels = c(&quot;短時間&quot;, &quot;通常&quot;, &quot;準長時間&quot;, &quot;長時間&quot;))) piaac %&gt;% with(table(workhour_fct)) ## workhour_fct ## 短時間 通常 準長時間 長時間 ## 766 1671 598 372 3.2.5 必要な列のみ抽出：select() データから特定の変数だけ抜き出したり、あるいは特定の変数だけ落としたりしたい場合がある。こういうときには、select()を使う。 piaac_1 &lt;- piaac %&gt;% select(gender, age, educ) #gender, age, educの列を抽出 piaac_2 &lt;- piaac %&gt;% select(-gender, -age, -educ) #gender, age, educ「以外」の列を抽出 3.3 変数の操作化についてのtips 3.3.1 カテゴリをまとめる たとえば、親の職業（階級）によって、対象者の学歴がどの程度異なるのかを知りたいとする。このとき、学歴を「中学」「高校」「短大高専」「大学大学院」という4つのカテゴリで定義しているとする。この場合には、たとえば「大学大学院」を1、それ以外を0とすることで、大学以上か大学未満か、という2値のカテゴリにする。 一つひとつのカテゴリに該当する人数が少ないときや、議論を単純化したいときに有効な方法といえる。 3.3.2 均等な順序を仮定して連続変数とする ある程度均等な順序があると仮定できるならば、数値として扱うことを考えてみるとよい。JGSSでは、「現在の仕事にどの程度満足していますか」という質問（ST5JOB）で、仕事への満足度が尋ねられている。選択肢は「満足している」「どちらかといえば満足している」「どちらともいえない」「どちらかといえば不満である」「不満である」という5つから1つを選択する形式である（わからないや無回答もあるが（後述）、ここでは省略する）。このようなときには、以下のように数値を割り当てることで、値が高いほど満足していることを表す連続変数に見立てることができる。もちろん、選択肢間の間隔がどれも同じ1であるというのはあくまで仮定であり本当は違うかもしれないということには注意が必要だが、解釈はわかりやすくなるというメリットがある。 選択肢 調査票上の番号 数値化例 満足している 1 5 どちらかといえば満足している 2 4 どちらでもない 3 3 どちらかといえば不満である 4 2 不満である 5 1 jgss #元のデータ（架空例） ## # A tibble: 6 x 1 ## ST5JOB ## &lt;dbl&gt; ## 1 1 ## 2 5 ## 3 4 ## 4 2 ## 5 1 ## 6 3 以下のようにして値を変えた変数を作成する。 jgss &lt;- jgss %&gt;% mutate(jobsatis = 6 - ST5JOB) jgss ## # A tibble: 6 x 2 ## ST5JOB jobsatis ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 5 ## 2 5 1 ## 3 4 2 ## 4 2 4 ## 5 1 5 ## 6 3 3 なお、こうした扱いが認められるかどうかは扱う変数によって異なるので、先行研究での定義を参考にするとよい。たとえば今回のような仕事への満足度についてはおおむねこのような処理は認められているが、「中学」に1、「高校」に2、「短大高専」に3、「大学大学院」に4を振る、というような処理はあまり認められていない。しかしながら、受けた教育年数として、「中学」に9、「高校」に12、「短大高専」に14、「大学」に16、「大学院」に18（など）といった値を振ることはある程度認められている。このあたりは先行研究の操作化を参考にしつつ、最終的には自分たちの関心によって決めるとよいだろう。 3.3.3 無回答、非該当、「わからない」などをNAに JGSSでは「夫は外で働き、妻は家庭を守るべきだ」という意見に対して賛成か反対かを4つの選択肢を設けて尋ねている。ただし、この質問に（何らかの理由で）回答していない者もおり、そのような場合には9という値が便宜的に振られている。 この質問に対する回答を連続値とみなして集計したりしたいとする。このような場合、無回答の9という値は計算から除外したいので、9という値ではなくNAとしたい。 jgss #元のデータ（架空例） ## # A tibble: 6 x 1 ## Q4WWHHX ## &lt;dbl&gt; ## 1 1 ## 2 9 ## 3 4 ## 4 3 ## 5 2 ## 6 1 以下のようにして9をNAに置き換えた変数を作成する。 jgss &lt;- jgss %&gt;% mutate(genderrole = if_else(Q4WWHHX == 9, NA_real_, Q4WWHHX)) # 9をNAに置換 jgss #変換後のデータ ## # A tibble: 6 x 2 ## Q4WWHHX genderrole ## &lt;dbl&gt; &lt;dbl&gt; ## 1 1 1 ## 2 9 NA ## 3 4 4 ## 4 3 3 ## 5 2 2 ## 6 1 1 調査によってはこのように無回答やあるいは「わからない」という選択肢に対して便宜的に99という数字が振られていたり、非該当（たとえば結婚している人に対してのみ尋ねる質問の場合、結婚していない人はその質問に回答しない。このような場合には、回答対象ではないという意味で、非該当とされる）のケースに対して便宜的に88といったような数字が振られていることがある。このような場合にも同じようにNAに変換する。 この作業を忘れて平均値などを計算するととんでもない間違いを犯してしまうことになるため、忘れないようにしっかりチェックしておきたい。実際、ある査読付き雑誌に掲載された論文が、売上高がわからないケースに対して付されていた88,888,888,888という値をNAにすることなく分析していたのではないか（実際、それをNAにすると分析の結果はまったく違うものになる）という指摘がなされ、大きな話題を読んだことがある。 用いる変数については平均値だけではなく、分布や実際の値、調査票の文言などをきちんとチェックしておき、くれぐれもこのようなミスが起こらないようにしたい。 3.3.4 カテゴリ変数の区間の中点をとって連続変数とする なんらかの区間をとって尋ねられている場合、その区間の中点をとって、連続変数とみなす。たとえば、日本家族社会学会が行っている2008年全国家族調査（NFRJ08）では、「あなたご自身…は、次にあげる…家事を現在どのくらいの頻度で行っていますか」という質問項目で、たとえば「食事の用意」について、以下のような選択肢で家事頻度を尋ねている。 選択肢 調査票上の番号 数値化例 ほぼ毎日（週6〜7回） 1 6.5 1週間に4〜5回 2 4.5 1週間に2〜3回 3 2.5 1週間に1回くらい 4 1 ほとんど行わない 5 0 このような場合、週6〜7回という区間の中点をとって6.5、週4〜5回という区間の中点をとって4.5、、etcとすることで、1週間当たりの家事頻度を表す連続変数と見立てることができる。 こうした扱いがどの程度許容されるかについては、先行研究での定義を参照するとよい。 年収などもこうした区間で扱われることがあるが、この場合は中点を定義できない選択肢が設けられていることがある（例：2050万円以上）。こうした場合の扱いについては別途書く（工事中） "],["descriptives.html", "Chapter 4 1変数の集計 4.1 連続変数を集計する 4.2 連続変数の分布の可視化：ヒストグラム 4.3 カテゴリ変数の集計 4.4 記述統計量の一覧表を作る", " Chapter 4 1変数の集計 以下の記述はすでにtidyverseパッケージを読み込んでおり、また読み込んだデータをpiaacというデータフレームに入れていることを前提とします。データフレームの名前はpiaacである必要はありません。以下のようなコードを実行していると思います。 library(tidyverse) piaac &lt;- read_csv(&quot;data/piaac.csv&quot;) また、Macでggplot2パッケージを使用し、グラフ中に日本語を使用する場合には、library(tidyverse)またはlibrary(ggplot2)を実行したうえで、たとえば以下のようなコードをあらかじめ実行しておく必要があります。 theme_set(theme_grey(base_family = &quot;HiraginoSans-W3&quot;)) この資料で使用しているグラフについては以下のようにthemeを設定しています。 theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsユーザの方は上記コードからbase_family =の行を除いたこちらのコードで同じような雰囲気になります： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 4.1 連続変数を集計する piaac %&gt;% summarize(mean = mean(wage)) ## # A tibble: 1 x 1 ## mean ## &lt;dbl&gt; ## 1 NA NAになってしまった。集計する変数（この場合はwage）にNAが含まれている場合には、平均値が計算できず、NAとなってしまう。NAを除いて平均値を計算するときには、あらかじめwageがNAの行を除外しておくとよい。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% summarize(mean = mean(wage)) ## # A tibble: 1 x 1 ## mean ## &lt;dbl&gt; ## 1 1778. 平均値だけでなく、いろいろな統計量を計算できる。よく用いるものは以下のとおり。 関数 意味 mean(x) 平均値 sd(x) 標準偏差 max(x) 最大値 min(x) 最小値 quantile(x, 0.5) 分位数。0.5とした場合には50パーセンタイル点（中央値）を計算する。0（最小）から1（最大）まで任意の点を指定できる。 n() 行数を数える。 全部集計してみるとたとえば以下のような感じになる。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% summarize(mean = mean(wage), sd = sd(wage), max = max(wage), min = min(wage), p25 = quantile(wage, 0.25), p50 = quantile(wage, 0.5), p75 = quantile(wage, 0.75), n = n()) ## # A tibble: 1 x 8 ## mean sd max min p25 p50 p75 n ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 1778. 1206. 10000 300 933. 1441. 2198. 2882 最小値、第1四分位点、中央値、平均値、第3四分位点、最大値をまとめて表示したい場合には、これらを計算したい変数だけをselect()で抽出したうえで、summary()関数を使うとできる。 piaac %&gt;% select(wage) %&gt;% summary() ## wage ## Min. : 300 ## 1st Qu.: 933 ## Median : 1441 ## Mean : 1778 ## 3rd Qu.: 2198 ## Max. :10000 ## NA&#39;s :537 4.2 連続変数の分布の可視化：ヒストグラム piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 10) piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram(bins = 100) 4.3 カテゴリ変数の集計 カテゴリ変数の場合は平均値や標準偏差のような要約統計量を計算することはできない（意味がない）。最も基本的な集計は、各カテゴリにそれぞれ何人いるのかを確認することだ。with(table())を使うことで各カテゴリの人数（行数）をみることができる。 piaac %&gt;% with(table(occupation)) ## occupation ## 管理職 専門職 技術職・准専門職 ## 249 531 543 ## 事務補助 サービス・販売 農林漁業 ## 511 732 72 ## 技能工 設備・機械運転・組立 単純作業 ## 359 249 173 人数だけでなく、各職業にどれくらいの割合の人が含まれているのかも重要だ。先ほどのコマンドにprop.table()を加えることで、各カテゴリに含まれる人が全体に占める割合を計算できる。 piaac %&gt;% with(table(occupation)) %&gt;% prop.table() ## occupation ## 管理職 専門職 技術職・准専門職 ## 0.07282831 0.15530857 0.15881837 ## 事務補助 サービス・販売 農林漁業 ## 0.14945891 0.21409769 0.02105879 ## 技能工 設備・機械運転・組立 単純作業 ## 0.10500146 0.07282831 0.05059959 この値をすべて足すと1になる。 小数点以下が多すぎて見にくいので、小数点第3位で丸めよう。先ほどのコマンドにround(digits = 3)を加えると、小数点第3位で丸めることができる。digitsのところの値が、小数点第○位の○の値に対応する。 piaac %&gt;% with(table(occupation)) %&gt;% prop.table() %&gt;% round(3) ## occupation ## 管理職 専門職 技術職・准専門職 ## 0.073 0.155 0.159 ## 事務補助 サービス・販売 農林漁業 ## 0.149 0.214 0.021 ## 技能工 設備・機械運転・組立 単純作業 ## 0.105 0.073 0.051 この値はすべて足すと1になる。なので、この値を100倍すると百分率（%）としてよむことができる。 ## カテゴリ変数の分布の可視化：棒グラフ こうして集計した値を棒グラフにして表すと見やすいかもしれない。そのためにまず、先の集計表をデータフレーム形式に変換してみよう。 piaac %&gt;% with(table(occupation)) %&gt;% prop.table() %&gt;% as.data.frame() ## occupation Freq ## 1 管理職 0.07282831 ## 2 専門職 0.15530857 ## 3 技術職・准専門職 0.15881837 ## 4 事務補助 0.14945891 ## 5 サービス・販売 0.21409769 ## 6 農林漁業 0.02105879 ## 7 技能工 0.10500146 ## 8 設備・機械運転・組立 0.07282831 ## 9 単純作業 0.05059959 このように、1行が1つの職業を表し、Freqという列には先ほど計算した割合が入っているようなデータフレームに変換することができる。これをggplot()に渡してやることで、棒グラフをつくることができる。棒グラフを作るときのコマンドは、geom_col()。 piaac %&gt;% with(table(occupation)) %&gt;% prop.table() %&gt;% as.data.frame() %&gt;% ggplot(aes(x = occupation, y = Freq)) + geom_col() 悪くないけれど、横軸のラベルがかぶってしまって、何を指しているのかいまいちわからなくなってしまっている。また、縦軸や横軸の名前は必ずしもわかりやすいものではないだろう。そこで、以下のようにコマンドを追加しよう。 piaac %&gt;% with(table(occupation)) %&gt;% prop.table() %&gt;% as.data.frame() %&gt;% ggplot(aes(x = occupation, y = Freq)) + geom_col() + labs(x = &quot;職業&quot;, y = &quot;割合&quot;) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) # X軸を45度傾ける 4.4 記述統計量の一覧表を作る 論文などで分析に使用する変数の記述統計量の一覧表を示していることがよくある。このような表を作ることで、読む側にとっては変数の分布を確認でき、その後の結果も読みやすくなる。こうした一覧表を作るために非常に便利なパッケージがgtsummaryだ。まずはこれを読み込もう。 install.packages(&quot;gtsummary&quot;) #未インストールの場合 libary(gtsummary) 次の5つの変数の記述統計量の一覧表を作りたいとしよう。select()を使って、こららの変数だけを残したデータフレームを作成する。 列名 型 変数ラベル gender カテゴリ（factor） 性別 age 連続（numeric） 年齢 educ カテゴリ（factor） 最終学歴 occupation カテゴリ（factor） 職業 wage 連続（numeric） 賃金 piaac_selectedvar &lt;- piaac %&gt;% select(gender, age, educ, occupation, wage) piaac_selectedvar %&gt;% head() ## # A tibble: 6 x 5 ## gender age educ occupation wage ## &lt;fct&gt; &lt;dbl&gt; &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; ## 1 女性 45 高校 技術職・准専門職 793. ## 2 男性 48 大学大学院 サービス・販売 1763. ## 3 男性 47 大学大学院 専門職 2692. ## 4 男性 58 大学大学院 管理職 2312. ## 5 女性 35 短大高専 専門職 5192. ## 6 男性 60 大学大学院 技能工 NA この中には連続変数もカテゴリ変数もあり、またカテゴリの個数が2つのものもあればもっと多いものもあって複雑である。gtsummary::tbl_summary()は、変数の型がきちんとしていれば、それを読み取ってきれいな記述統計量の表を作ってくれる。 piaac_selectedvar %&gt;% tbl_summary() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ydgabwknrs .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ydgabwknrs .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ydgabwknrs .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ydgabwknrs .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ydgabwknrs .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ydgabwknrs .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ydgabwknrs .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ydgabwknrs .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ydgabwknrs .gt_column_spanner_outer:first-child { padding-left: 0; } #ydgabwknrs .gt_column_spanner_outer:last-child { padding-right: 0; } #ydgabwknrs .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ydgabwknrs .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ydgabwknrs .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ydgabwknrs .gt_from_md > :first-child { margin-top: 0; } #ydgabwknrs .gt_from_md > :last-child { margin-bottom: 0; } #ydgabwknrs .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ydgabwknrs .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ydgabwknrs .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ydgabwknrs .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ydgabwknrs .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ydgabwknrs .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ydgabwknrs .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ydgabwknrs .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ydgabwknrs .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ydgabwknrs .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ydgabwknrs .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ydgabwknrs .gt_sourcenote { font-size: 90%; padding: 4px; } #ydgabwknrs .gt_left { text-align: left; } #ydgabwknrs .gt_center { text-align: center; } #ydgabwknrs .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ydgabwknrs .gt_font_normal { font-weight: normal; } #ydgabwknrs .gt_font_bold { font-weight: bold; } #ydgabwknrs .gt_font_italic { font-style: italic; } #ydgabwknrs .gt_super { font-size: 65%; } #ydgabwknrs .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic N = 3,4191 gender 女性 1,580 (46%) 男性 1,839 (54%) age 44 (36, 54) educ 中学 316 (9.2%) 高校 1,211 (35%) 短大高専 827 (24%) 大学大学院 1,065 (31%) occupation 管理職 249 (7.3%) 専門職 531 (16%) 技術職・准専門職 543 (16%) 事務補助 511 (15%) サービス・販売 732 (21%) 農林漁業 72 (2.1%) 技能工 359 (11%) 設備・機械運転・組立 249 (7.3%) 単純作業 173 (5.1%) wage 1,441 (933, 2,198) Unknown 537 1 n (%); Median (IQR) これでもすでにかなりきれいな表になっているが、以下の3点で改善の余地がある。 wageにはNAが含まれているので、賃金の平均値を計算するときの人数とその他の変数の分布を計算するときの人数にずれがある。 educやoccupationといった変数がそれぞれ何を示しているのか、自分以外の見る人にとっては必ずしも明らかではない。 連続変数については中央値（50パーセンタイル点）、第1四分位数（25パーセンタイル点）、第3四分位数（75パーセンタイル点）が示されているが、平均値と標準偏差を載せることのほうが多いので、そちらを表記したい。 これらを1つずつ改善していこう。 4.4.1 用いる変数に欠損があるケースを除外 piaac_selectedvar_nona &lt;- piaac_selectedvar %&gt;% na.omit() #用いる5つの変数のいずれかが欠損のケースを除外する piaac_selectedvar_nona %&gt;% tbl_summary() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #auujvnjgio .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #auujvnjgio .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #auujvnjgio .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #auujvnjgio .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #auujvnjgio .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #auujvnjgio .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #auujvnjgio .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #auujvnjgio .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #auujvnjgio .gt_column_spanner_outer:first-child { padding-left: 0; } #auujvnjgio .gt_column_spanner_outer:last-child { padding-right: 0; } #auujvnjgio .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #auujvnjgio .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #auujvnjgio .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #auujvnjgio .gt_from_md > :first-child { margin-top: 0; } #auujvnjgio .gt_from_md > :last-child { margin-bottom: 0; } #auujvnjgio .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #auujvnjgio .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #auujvnjgio .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #auujvnjgio .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #auujvnjgio .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #auujvnjgio .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #auujvnjgio .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #auujvnjgio .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #auujvnjgio .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #auujvnjgio .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #auujvnjgio .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #auujvnjgio .gt_sourcenote { font-size: 90%; padding: 4px; } #auujvnjgio .gt_left { text-align: left; } #auujvnjgio .gt_center { text-align: center; } #auujvnjgio .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #auujvnjgio .gt_font_normal { font-weight: normal; } #auujvnjgio .gt_font_bold { font-weight: bold; } #auujvnjgio .gt_font_italic { font-style: italic; } #auujvnjgio .gt_super { font-size: 65%; } #auujvnjgio .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic N = 2,8821 gender 女性 1,387 (48%) 男性 1,495 (52%) age 43 (35, 53) educ 中学 247 (8.6%) 高校 1,015 (35%) 短大高専 722 (25%) 大学大学院 898 (31%) occupation 管理職 224 (7.8%) 専門職 438 (15%) 技術職・准専門職 457 (16%) 事務補助 471 (16%) サービス・販売 605 (21%) 農林漁業 28 (1.0%) 技能工 283 (9.8%) 設備・機械運転・組立 223 (7.7%) 単純作業 153 (5.3%) wage 1,441 (933, 2,198) 1 n (%); Median (IQR) 「賃金」の行に表示されていた「Unknown」の表記が消え、どの変数についても欠損のないケースをもとに集計がされている。 このような欠損値の処理の仕方をさして、リストワイズ除去 listwise delitionという。今日ではあまり望ましくない処理とされているが、まずはこのやりかたでやるのがよいだろう。欠損があまりに多い場合には、何らかのデータ操作のミス、調査のうえでの何らかの問題、そのほかの理由が考えられるため、欠損の数がどれくらいあるのかは注意して見ておくとよいだろう。 4.4.2 変数にラベル（名前）をつける install.packages(&quot;labelled&quot;) #未インストールの場合 library(labelled) piaac_selectedvar_nona &lt;- piaac_selectedvar_nona %&gt;% set_variable_labels( gender = &quot;性別&quot;, age = &quot;年齢&quot;, educ = &quot;最終学歴&quot;, occupation = &quot;職業&quot;, wage = &quot;賃金&quot; ) piaac_selectedvar_nona %&gt;% tbl_summary() html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ueiyneebjy .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ueiyneebjy .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ueiyneebjy .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ueiyneebjy .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ueiyneebjy .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ueiyneebjy .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ueiyneebjy .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ueiyneebjy .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ueiyneebjy .gt_column_spanner_outer:first-child { padding-left: 0; } #ueiyneebjy .gt_column_spanner_outer:last-child { padding-right: 0; } #ueiyneebjy .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ueiyneebjy .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ueiyneebjy .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ueiyneebjy .gt_from_md > :first-child { margin-top: 0; } #ueiyneebjy .gt_from_md > :last-child { margin-bottom: 0; } #ueiyneebjy .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ueiyneebjy .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ueiyneebjy .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ueiyneebjy .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ueiyneebjy .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ueiyneebjy .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ueiyneebjy .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ueiyneebjy .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ueiyneebjy .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ueiyneebjy .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ueiyneebjy .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ueiyneebjy .gt_sourcenote { font-size: 90%; padding: 4px; } #ueiyneebjy .gt_left { text-align: left; } #ueiyneebjy .gt_center { text-align: center; } #ueiyneebjy .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ueiyneebjy .gt_font_normal { font-weight: normal; } #ueiyneebjy .gt_font_bold { font-weight: bold; } #ueiyneebjy .gt_font_italic { font-style: italic; } #ueiyneebjy .gt_super { font-size: 65%; } #ueiyneebjy .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic N = 2,8821 性別 女性 1,387 (48%) 男性 1,495 (52%) 年齢 43 (35, 53) 最終学歴 中学 247 (8.6%) 高校 1,015 (35%) 短大高専 722 (25%) 大学大学院 898 (31%) 職業 管理職 224 (7.8%) 専門職 438 (15%) 技術職・准専門職 457 (16%) 事務補助 471 (16%) サービス・販売 605 (21%) 農林漁業 28 (1.0%) 技能工 283 (9.8%) 設備・機械運転・組立 223 (7.7%) 単純作業 153 (5.3%) 賃金 1,441 (933, 2,198) 1 n (%); Median (IQR) 4.4.3 連続変数は平均値・標準偏差を表示する piaac_selectedvar_nona %&gt;% tbl_summary(statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;)) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #loatcfjjfo .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #loatcfjjfo .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #loatcfjjfo .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #loatcfjjfo .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #loatcfjjfo .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #loatcfjjfo .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #loatcfjjfo .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #loatcfjjfo .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #loatcfjjfo .gt_column_spanner_outer:first-child { padding-left: 0; } #loatcfjjfo .gt_column_spanner_outer:last-child { padding-right: 0; } #loatcfjjfo .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #loatcfjjfo .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #loatcfjjfo .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #loatcfjjfo .gt_from_md > :first-child { margin-top: 0; } #loatcfjjfo .gt_from_md > :last-child { margin-bottom: 0; } #loatcfjjfo .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #loatcfjjfo .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #loatcfjjfo .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #loatcfjjfo .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #loatcfjjfo .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #loatcfjjfo .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #loatcfjjfo .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #loatcfjjfo .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #loatcfjjfo .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #loatcfjjfo .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #loatcfjjfo .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #loatcfjjfo .gt_sourcenote { font-size: 90%; padding: 4px; } #loatcfjjfo .gt_left { text-align: left; } #loatcfjjfo .gt_center { text-align: center; } #loatcfjjfo .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #loatcfjjfo .gt_font_normal { font-weight: normal; } #loatcfjjfo .gt_font_bold { font-weight: bold; } #loatcfjjfo .gt_font_italic { font-style: italic; } #loatcfjjfo .gt_super { font-size: 65%; } #loatcfjjfo .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic N = 2,8821 性別 女性 1,387 (48%) 男性 1,495 (52%) 年齢 44 (11) 最終学歴 中学 247 (8.6%) 高校 1,015 (35%) 短大高専 722 (25%) 大学大学院 898 (31%) 職業 管理職 224 (7.8%) 専門職 438 (15%) 技術職・准専門職 457 (16%) 事務補助 471 (16%) サービス・販売 605 (21%) 農林漁業 28 (1.0%) 技能工 283 (9.8%) 設備・機械運転・組立 223 (7.7%) 単純作業 153 (5.3%) 賃金 1,778 (1,206) 1 n (%); Mean (SD) 4.4.4 グループ別の記述統計量の一覧表 何らかの属性などでサンプルを分けて比較分析する場合には、属性ごとの記述統計量を示すとよい。これも、tbl_summary()のなかでオプションを指定することで簡単に実行することができる。 piaac_selectedvar_nona %&gt;% tbl_summary(statistic = list(all_continuous() ~ &quot;{mean} ({sd})&quot;), by = gender) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ttzlywfyhl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ttzlywfyhl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ttzlywfyhl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ttzlywfyhl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ttzlywfyhl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ttzlywfyhl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ttzlywfyhl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ttzlywfyhl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ttzlywfyhl .gt_column_spanner_outer:first-child { padding-left: 0; } #ttzlywfyhl .gt_column_spanner_outer:last-child { padding-right: 0; } #ttzlywfyhl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ttzlywfyhl .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ttzlywfyhl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ttzlywfyhl .gt_from_md > :first-child { margin-top: 0; } #ttzlywfyhl .gt_from_md > :last-child { margin-bottom: 0; } #ttzlywfyhl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ttzlywfyhl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ttzlywfyhl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ttzlywfyhl .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ttzlywfyhl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ttzlywfyhl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ttzlywfyhl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ttzlywfyhl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ttzlywfyhl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ttzlywfyhl .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ttzlywfyhl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ttzlywfyhl .gt_sourcenote { font-size: 90%; padding: 4px; } #ttzlywfyhl .gt_left { text-align: left; } #ttzlywfyhl .gt_center { text-align: center; } #ttzlywfyhl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ttzlywfyhl .gt_font_normal { font-weight: normal; } #ttzlywfyhl .gt_font_bold { font-weight: bold; } #ttzlywfyhl .gt_font_italic { font-style: italic; } #ttzlywfyhl .gt_super { font-size: 65%; } #ttzlywfyhl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic 女性, N = 1,3871 男性, N = 1,4951 年齢 44 (11) 44 (11) 最終学歴 中学 105 (7.6%) 142 (9.5%) 高校 511 (37%) 504 (34%) 短大高専 500 (36%) 222 (15%) 大学大学院 271 (20%) 627 (42%) 職業 管理職 17 (1.2%) 207 (14%) 専門職 219 (16%) 219 (15%) 技術職・准専門職 152 (11%) 305 (20%) 事務補助 354 (26%) 117 (7.8%) サービス・販売 422 (30%) 183 (12%) 農林漁業 9 (0.6%) 19 (1.3%) 技能工 70 (5.0%) 213 (14%) 設備・機械運転・組立 39 (2.8%) 184 (12%) 単純作業 105 (7.6%) 48 (3.2%) 賃金 1,328 (813) 2,196 (1,351) 1 Mean (SD); n (%) "],["tabulate.html", "Chapter 5 2変数の集計 5.1 2変数の集計の類型 5.2 平均値の比較 5.3 分布の比較 5.4 クロス集計 5.5 クロス集計表を図示する 5.6 散布図 5.7 値が細かくない連続変数を扱う", " Chapter 5 2変数の集計 以下の記述はすでにtidyverseパッケージを読み込んでおり、また読み込んだデータをpiaacというデータフレームに入れていることを前提とします。データフレームの名前はpiaacである必要はありません。以下のようなコードを実行していると思います。 library(tidyverse) piaac &lt;- read_csv(&quot;data/piaac.csv&quot;) また、Macでggplot2パッケージを使用し、グラフ中に日本語を使用する場合には、library(tidyverse)またはlibrary(ggplot2)を実行したうえで、たとえば以下のようなコードをあらかじめ実行しておく必要があります。 theme_set(theme_grey(base_family = &quot;HiraginoSans-W3&quot;)) この資料で使用しているグラフについては以下のようにthemeを設定しています。 theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsユーザの方は上記コードからbase_family =の行を除いたこちらのコードで同じような雰囲気になります： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 5.1 2変数の集計の類型 従属変数 独立変数 カテゴリ変数 連続変数 カテゴリ変数 クロス集計 平均値の比較・分布の比較 連続変数 — 散布図 5.2 平均値の比較 5.2.1 基本 性別ごとに賃金の値を比較したいとする。このようなときには、平均値の比較を行う。 piaac %&gt;% group_by(gender) %&gt;% # genderの値ごとに集計すると宣言 summarize(mean = mean(wage)) ## # A tibble: 2 x 2 ## gender mean ## &lt;fct&gt; &lt;dbl&gt; ## 1 女性 NA ## 2 男性 NA どちらもNAになってしまった。集計する変数（この場合はwage）にNAが含まれている場合には、平均値が計算できず、NAとなってしまう。NAを除いて平均値を計算するときには、あらかじめwageがNAの行を除外しておくとよい。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% # is.na(wage)で、wageの値がNAならTRUE, NAでないならFALSEを返す group_by(gender) %&gt;% summarize(mean = mean(wage)) ## # A tibble: 2 x 2 ## gender mean ## &lt;fct&gt; &lt;dbl&gt; ## 1 女性 1328. ## 2 男性 2196. 平均値だけでなく、標準偏差と各カテゴリの人数をチェックしておくとよいだろう。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% group_by(gender) %&gt;% summarize(mean = mean(wage), sd = sd(wage), n = n()) # n()で行の数を計算 ## # A tibble: 2 x 4 ## gender mean sd n ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 女性 1328. 813. 1387 ## 2 男性 2196. 1351. 1495 5.2.2 棒グラフによる可視化 平均値の違いを視覚的にみたいときには、棒グラフを作るのがよい。先ほどのようにカテゴリごとに平均値を計算したうえで、geom_col()で棒グラフを作ることができる。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% group_by(gender) %&gt;% summarize(mean = mean(wage)) %&gt;% ggplot(aes(x = gender, y = mean)) + geom_col() + labs(x = &quot;性別&quot;, y = &quot;平均賃金&quot;) 5.2.3 複数カテゴリの組み合わせ 複数のカテゴリ変数を組み合わせて平均値を比較したいということもあるだろう。このような場合も、基本は同じ。group_by()の部分に複数の変数を指定することで、カテゴリを組合わせた集計ができる。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% filter(is.na(educ) == FALSE) %&gt;% group_by(gender, educ) %&gt;% summarize(mean = mean(wage), n = n()) ## `summarise()` has grouped output by &#39;gender&#39;. You can override using the `.groups` argument. ## # A tibble: 8 x 4 ## # Groups: gender [2] ## gender educ mean n ## &lt;fct&gt; &lt;fct&gt; &lt;dbl&gt; &lt;int&gt; ## 1 女性 中学 984. 105 ## 2 女性 高校 1129. 511 ## 3 女性 短大高専 1379. 500 ## 4 女性 大学大学院 1741. 271 ## 5 男性 中学 1800. 142 ## 6 男性 高校 1916. 504 ## 7 男性 短大高専 1936. 222 ## 8 男性 大学大学院 2603. 627 棒グラフを作ることももちろんできる。いくつかのパターンを示しておく。 meandata &lt;- piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% filter(is.na(educ) == FALSE) %&gt;% group_by(gender, educ) %&gt;% summarize(mean = mean(wage)) #いったん名前をつけて保存しておく ## `summarise()` has grouped output by &#39;gender&#39;. You can override using the `.groups` argument. 学歴で色分けするパターン： meandata %&gt;% ggplot(aes(x = gender, y = mean, fill = educ)) + geom_col(position = &quot;dodge&quot;) + labs(x = &quot;性別&quot;, y = &quot;平均賃金&quot;) 性別で色分けするパターン： meandata %&gt;% ggplot(aes(x = educ, y = mean, fill = gender)) + geom_col(position = &quot;dodge&quot;) + labs(x = &quot;学歴&quot;, y = &quot;平均賃金&quot;) 性別でグラフを分割するパターン： meandata %&gt;% ggplot(aes(x = educ, y = mean)) + geom_col() + labs(x = &quot;学歴&quot;, y = &quot;平均賃金&quot;) + facet_wrap(~gender) 5.3 分布の比較 複数のヒストグラムを重ねるときには、geom_histogram()のなかでposition = \"identity\"と指定する。また、ヒストグラムが重なると片方が見えなくなってしまうので、alpha = 0.5などと指定することで、透明度をつける。alpha = 1がデフォルトで、0に近づくほど透明度が高くなる。 piaac %&gt;% ggplot(aes(x = wage, fill = gender)) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5) + labs(fill = &quot;&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. カテゴリごとに人数が異なる場合、少し比較が難しいかもしれない。このような場合は縦軸を度数ではなく密度（density）にするとよい。 piaac %&gt;% ggplot(aes(x = wage, y = ..density.., fill = gender)) + geom_histogram(position = &quot;identity&quot;, alpha = 0.5) + labs(fill = &quot;&quot;) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. カテゴリの数が2つならいいが、たくさんの場合には見にくくなってしまう。そのような場合にはfacet_wrap()をつかって図を分けるのがよいだろう。 piaac %&gt;% ggplot(aes(x = wage, y = ..density..)) + geom_histogram() + facet_wrap(~occupation) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 5.4 クロス集計 5.4.1 基本 親の学歴によって本人の学歴の分布がどの程度異なるのかを知りたいとする。このようなときには、クロス集計表を作成する。 piaac %&gt;% with(table(parenteduc, educ)) ## educ ## parenteduc 中学 高校 短大高専 大学大学院 ## 親：初等教育 166 430 151 130 ## 親：中等教育 103 559 391 394 ## 親：高等教育 25 178 273 530 行%を計算することで、より親の学歴ごとの内訳がわかりやすくなる。 piaac %&gt;% with(table(parenteduc, educ)) %&gt;% prop.table(margin = 1) ## educ ## parenteduc 中学 高校 短大高専 大学大学院 ## 親：初等教育 0.18928164 0.49030787 0.17217788 0.14823261 ## 親：中等教育 0.07118176 0.38631652 0.27021424 0.27228749 ## 親：高等教育 0.02485089 0.17693837 0.27137177 0.52683897 親の学歴が高いほど、本人の学歴も高いことがわかる。 5.4.2 きれいなクロス表をつくる - gtsummary::tbl_cross() とはいえ、このクロス表はあまり見やすいものとはいえない。度数（人数）と行%がいずれも表示され、かつ、周辺度数（行合計と列合計）を表示するグラフは作れないだろうか。 このようなときに、gtsummaryパッケージに含まれているgtsummary::tbl_cross()関数が役に立つ。 install.packages(&quot;gtsummary&quot;) #未インストールの場合はインストール library(gtsummary) 行%を表記する場合は、tbl_cross(data = xx, row = 行にする変数, column = 列にする変数, percent = \"row\")と書く。 piaac %&gt;% tbl_cross(parenteduc, educ, percent = &quot;row&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ywxfzgsjfx .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ywxfzgsjfx .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ywxfzgsjfx .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ywxfzgsjfx .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #ywxfzgsjfx .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ywxfzgsjfx .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ywxfzgsjfx .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ywxfzgsjfx .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ywxfzgsjfx .gt_column_spanner_outer:first-child { padding-left: 0; } #ywxfzgsjfx .gt_column_spanner_outer:last-child { padding-right: 0; } #ywxfzgsjfx .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ywxfzgsjfx .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ywxfzgsjfx .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ywxfzgsjfx .gt_from_md > :first-child { margin-top: 0; } #ywxfzgsjfx .gt_from_md > :last-child { margin-bottom: 0; } #ywxfzgsjfx .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ywxfzgsjfx .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #ywxfzgsjfx .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ywxfzgsjfx .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #ywxfzgsjfx .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ywxfzgsjfx .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ywxfzgsjfx .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ywxfzgsjfx .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ywxfzgsjfx .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ywxfzgsjfx .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #ywxfzgsjfx .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ywxfzgsjfx .gt_sourcenote { font-size: 90%; padding: 4px; } #ywxfzgsjfx .gt_left { text-align: left; } #ywxfzgsjfx .gt_center { text-align: center; } #ywxfzgsjfx .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ywxfzgsjfx .gt_font_normal { font-weight: normal; } #ywxfzgsjfx .gt_font_bold { font-weight: bold; } #ywxfzgsjfx .gt_font_italic { font-style: italic; } #ywxfzgsjfx .gt_super { font-size: 65%; } #ywxfzgsjfx .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic educ Total 中学 高校 短大高専 大学大学院 parenteduc 親：初等教育 166 (19%) 430 (49%) 151 (17%) 130 (15%) 877 (100%) 親：中等教育 103 (7.1%) 559 (39%) 391 (27%) 394 (27%) 1,447 (100%) 親：高等教育 25 (2.5%) 178 (18%) 273 (27%) 530 (53%) 1,006 (100%) Unknown 22 (25%) 44 (49%) 12 (13%) 11 (12%) 89 (100%) Total 316 (9.2%) 1,211 (35%) 827 (24%) 1,065 (31%) 3,419 (100%) 値が度数、括弧内が行%を意味している。with(table())のときと違って、NAのデータは自動的に除外されず、「Unknown」という行や列が追加される。NAのデータを除外したいときには、以下のようにする。 piaac %&gt;% tbl_cross(parenteduc, educ, percent = &quot;row&quot;, missing = &quot;no&quot;) ## FALSE observations with missing data have been removed. html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #nbmrvnfass .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #nbmrvnfass .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nbmrvnfass .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #nbmrvnfass .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #nbmrvnfass .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nbmrvnfass .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #nbmrvnfass .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #nbmrvnfass .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #nbmrvnfass .gt_column_spanner_outer:first-child { padding-left: 0; } #nbmrvnfass .gt_column_spanner_outer:last-child { padding-right: 0; } #nbmrvnfass .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #nbmrvnfass .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #nbmrvnfass .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #nbmrvnfass .gt_from_md > :first-child { margin-top: 0; } #nbmrvnfass .gt_from_md > :last-child { margin-bottom: 0; } #nbmrvnfass .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #nbmrvnfass .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #nbmrvnfass .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nbmrvnfass .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #nbmrvnfass .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #nbmrvnfass .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #nbmrvnfass .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #nbmrvnfass .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #nbmrvnfass .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nbmrvnfass .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #nbmrvnfass .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #nbmrvnfass .gt_sourcenote { font-size: 90%; padding: 4px; } #nbmrvnfass .gt_left { text-align: left; } #nbmrvnfass .gt_center { text-align: center; } #nbmrvnfass .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #nbmrvnfass .gt_font_normal { font-weight: normal; } #nbmrvnfass .gt_font_bold { font-weight: bold; } #nbmrvnfass .gt_font_italic { font-style: italic; } #nbmrvnfass .gt_super { font-size: 65%; } #nbmrvnfass .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic educ Total 中学 高校 短大高専 大学大学院 parenteduc 親：初等教育 166 (19%) 430 (49%) 151 (17%) 130 (15%) 877 (100%) 親：中等教育 103 (7.1%) 559 (39%) 391 (27%) 394 (27%) 1,447 (100%) 親：高等教育 25 (2.5%) 178 (18%) 273 (27%) 530 (53%) 1,006 (100%) Total 294 (8.8%) 1,167 (35%) 815 (24%) 1,054 (32%) 3,330 (100%) 5.5 クロス集計表を図示する クロス集計は数値が多いので、図で表されているとわかりやすいかもしれない。このようなときには、with(table())で作成した数値をデータフレームとすることで、比較的簡単に図をつくることができる。 table &lt;- piaac %&gt;% with(table(parenteduc, educ)) %&gt;% prop.table(margin = 1) %&gt;% as.data.frame() # データフレーム形式に変換 table #中身を確認。 ## parenteduc educ Freq ## 1 親：初等教育 中学 0.18928164 ## 2 親：中等教育 中学 0.07118176 ## 3 親：高等教育 中学 0.02485089 ## 4 親：初等教育 高校 0.49030787 ## 5 親：中等教育 高校 0.38631652 ## 6 親：高等教育 高校 0.17693837 ## 7 親：初等教育 短大高専 0.17217788 ## 8 親：中等教育 短大高専 0.27021424 ## 9 親：高等教育 短大高専 0.27137177 ## 10 親：初等教育 大学大学院 0.14823261 ## 11 親：中等教育 大学大学院 0.27228749 ## 12 親：高等教育 大学大学院 0.52683897 table %&gt;% ggplot(aes(y = Freq, x = parenteduc, fill = educ)) + geom_col() + labs(x = &quot;&quot;, y = &quot;割合&quot;, fill = &quot;本人学歴&quot;) 積み上げ棒グラフは各カテゴリの大きさがわかりにくいので、ばらして始点をそろえるほうが見やすいかもしれない。 table %&gt;% ggplot(aes(y = Freq, x = parenteduc, fill = educ)) + geom_col(position = &quot;dodge&quot;) + labs(x = &quot;&quot;, y = &quot;割合&quot;, fill = &quot;本人学歴&quot;) + theme(legend.position = &quot;bottom&quot;) 5.6 散布図 5.6.1 散布図をみる 連続変数どうしの関係をみたいときには、散布図を使う。散布図を書くときには、geom_point()を使う。サンプルサイズが大きい場合には点がかぶってしまうので、かぶっている箇所がわかりやすいよう、透明度を指定するか、点の形状を変えると良い。shape = 1というオプションをつけると、白抜きの点にできる。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) 散布図の傾向を表すような直線を引くと、関係がよりわかりやすいだろう。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula &#39;y ~ x&#39; geom_smooth()というのは、2つの変数の関連の傾向を示す線を描く関数。カッコ内で、どのような線を引くのかを指定する。 method = \"lm\"という部分は、回帰分析により推定される直線を引くという指定を表している。何も書かない場合には、method = \"loess\"（局所回帰）による線が描かれる。 se = FALSEの部分では、係数の標準誤差から計算される95%信頼区間を書かないという指定を表している。何も書かない場合には、信頼区間がプロットされる。 5.6.2 カテゴリごとに散布図を分ける たとえば男性と女性で別々に散布図を書きたいということがあるだろう。このような場合には、facet_wrap()を使うか、color =を指定する。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) + facet_wrap(~gender) ## `geom_smooth()` using formula &#39;y ~ x&#39; piaac %&gt;% ggplot(aes(x = age, y = wage, color = gender)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula &#39;y ~ x&#39; 5.6.3 相関係数 相関係数は以下のように定義される： \\[ r = \\frac{\\textrm{Cov}(x, y)}{\\textrm{Sd}(x)\\textrm{Sd}(y)} = \\frac{\\frac{1}{N} \\sum_{i = 1}^N(x_i - \\overline{x})(y_i - \\overline{y})}{\\sqrt{\\frac{1}{N} \\sum_{i = 1}^N(x_i - \\overline{x})^2}\\sqrt{\\frac{1}{N} \\sum_{i = 1}^N(y_i - \\overline{y})^2}} \\] 相関係数はsummarize()コマンドで計算できる。NAが含まれている場合にはやはり計算結果もNAになってしまうので、前もってNAの行がないかどうかチェックしておく。 piaac %&gt;% filter(is.na(wage) == FALSE) %&gt;% summarize(cor = cor(age, wage)) ## # A tibble: 1 x 1 ## cor ## &lt;dbl&gt; ## 1 0.134 5.7 値が細かくない連続変数を扱う 値が細かくない連続変数を扱う場合、散布図があまり可視化の役に立たないことがある。例えば、健康状態について尋ねた質問の選択肢に次のように値を与え、高いほど健康であることを示すようにした変数（health）があるとする。 選択肢 調査票上の番号 数値化例 極めて優れている 1 5 大変良い 2 4 良い 3 3 どちらともいえない 4 2 悪い 5 1 年齢が高いほど健康状態が悪くなるというのはよく知られているので、年齢を横軸、健康状態を縦軸にとった散布図を書くと右下に点が集まるはずだと思ったが、散布図を書いてみると、点が重なってしまってなんだかよくわからない散布図になってしまう。 piaac %&gt;% ggplot(aes(x = age, y = health)) + geom_point(alpha = 0.2) このような場合はどうしたらよいだろうか？解決策の1つは、平均値の比較のときのように、横軸の変数の値ごとに健康状態の平均値を計算し、それをプロットすることだ。 piaac %&gt;% group_by(age) %&gt;% summarize(mean = mean(health)) %&gt;% ggplot(aes(x = age, y = mean)) + geom_point() ただ、この図では人数が少ない年齢層も多い年齢層も同じ大きさの点で描かれてしまっていることが少し不満かもしれない。点の大きさを考慮したい場合には、バブル・プロットを使う。aestheticsのところでsize =を指定することで、点の大きさを変えることができる。 piaac %&gt;% group_by(age) %&gt;% summarize(mean = mean(health), n = n()) %&gt;% ggplot(aes(x = age, y = mean, size = n)) + geom_point(alpha = 0.5) "],["regression-basic.html", "Chapter 6 回帰分析の基礎 6.1 説明 6.2 最小二乗法（OLS）（工事中） 6.3 独立変数がカテゴリ変数の場合 6.4 従属変数が2値のカテゴリ変数（0/1）の場合 6.5 非線形の関連：対数変換 6.6 非線形の関連：2次関数型 6.7 結果をきれいに表示する", " Chapter 6 回帰分析の基礎 以下の記述はすでにtidyverseパッケージを読み込んでおり、また読み込んだデータをpiaacというデータフレームに入れていることを前提とします。データフレームの名前はpiaacである必要はありません。以下のようなコードを実行していると思います。 library(tidyverse) piaac &lt;- read_csv(&quot;data/piaac.csv&quot;) また、Macでggplot2パッケージを使用し、グラフ中に日本語を使用する場合には、library(tidyverse)またはlibrary(ggplot2)を実行したうえで、たとえば以下のようなコードをあらかじめ実行しておく必要があります。 theme_set(theme_grey(base_family = &quot;HiraginoSans-W3&quot;)) この資料で使用しているグラフについては以下のようにthemeを設定しています。 theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsユーザの方は上記コードからbase_family =の行を除いたこちらのコードで同じような雰囲気になります： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 6.1 説明 年齢が高いほど賃金（時給換算）が高いという傾向があるかどうかを知りたいとする。このとき、年齢を横軸、賃金を縦軸とする散布図を書いてみる。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) なんとなく、年齢が高いほど賃金が高い傾向があるようにみえる。この関係を1つの直線で要約するとしたらどのようになるだろう？この直線を示したのが次の図になる。 piaac %&gt;% ggplot(aes(x = age, y = wage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula &#39;y ~ x&#39; このように、従属変数と独立変数の関係を\\(y = f(x)\\)というような関数で表現する分析方法を指して、回帰分析 regression analysis/regression model という。今回の式の場合は、次のようなかたちになる。とくに今回のような場合を線形回帰分析 Linear regressionということもある。 \\[ y = \\beta_0 + \\beta_1x \\] 今の例の場合は、\\(y\\)は賃金、\\(x\\)は年齢である。\\(\\beta_k\\)のことを係数 coefficient といい、なかでもとくに\\(\\beta_0\\)のことを切片 intercept、\\(\\beta_1\\)のことを傾き slope という。傾きは、\\(x\\)が1単位高いときに\\(y\\)がどれだけ高いかを表す。 ここで関心があるのは傾きの値である。これが正であれば、\\(x\\)が高いほど\\(y\\)は高いという正の関係を表すし、負であれば、\\(x\\)が高いほど\\(y\\)は低いという負の関係を表す。絶対値が大きいほど、\\(x\\) 1単位の変化に対して \\(y\\)がより大きく変わるということを表すので、たんに正か負かというだけでなく、その値も重要。 今回の場合は係数はどうなるだろうか？線形回帰分析を推定するときのコマンドがlm()である。lm(data = xx, formula = )という書き方になる。formula =の部分は省略しても大丈夫。 lm(data = piaac, formula = wage ~ age) ## ## Call: ## lm(formula = wage ~ age, data = piaac) ## ## Coefficients: ## (Intercept) age ## 1124.92 14.86 (Intercept)の部分が切片\\(\\beta_0\\)、ageの部分がageの傾き\\(\\beta_1\\)にそれぞれ対応する。したがって、賃金と年齢の関係は以下の式のように表されるということを意味する： \\[ y = 1124.9 + 14.9x \\] では、推定された係数というのが偶然ではなく、母集団においても確かに正であるということができるだろうか。そのことを確認するための結果をみるために、いったん、名前をつけて結果を保存する。 reg_res &lt;- lm(data = piaac, wage ~ age) 名前をつけた結果は、summary()でよびだすことができる： summary(reg_res) ## ## Call: ## lm(formula = wage ~ age, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1631.2 -807.8 -301.9 449.7 8048.3 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1124.918 92.519 12.159 &lt; 2e-16 *** ## age 14.860 2.043 7.273 4.5e-13 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1195 on 2880 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.01804, Adjusted R-squared: 0.0177 ## F-statistic: 52.9 on 1 and 2880 DF, p-value: 4.497e-13 1列目のEstimateの列には、先ほどみたように係数の値が表示される。2列目のStd. Errorの列が標準誤差 standard errorを表し、係数のばらつきを示している。4列めのPr(&gt;|t|)の列がp値 p-valueを表している。p値は「もし母集団において係数が0であるという帰無仮説が正しいとしたときに、今回のような係数の値となる確率」を表しており、この値が十分に低いのなら、帰無仮説を棄却して、たしかに母集団においても係数は0でなさそうだ（正あるいは負だ）、ということを自信をもって主張できるということになる。 ageの行をのp値を確認すると、rreg_res_tidy$p.value[2]`となっている。つまり、母集団において年齢の係数が0であったとしたら、今回のような係数の値が得られる確率はとても低い（0.000000000000045）、ということである。 この確率がどれくらい低ければ自信をもって「関係がある」と言えるのかということだが、慣習的には、0.05という基準が使われている。Rでは、0.05よりも小さければ（正確には0.01 ≤ p &lt; 0.05）、p値の横に*という印がつく。同じようにして、0.01よりも小さければ（0.001 ≤ p &lt; 0.01）**、0.001よりも小さければ（p &lt; 0.001）、***という印がつく。 6.2 最小二乗法（OLS）（工事中） もちろん、上記の回帰式は散布図をみて直観でえいやっと式の値を決めたのではなく、全体の傾向をもっともよく要約するような係数を推定している。その係数の推定方法を最小二乗法 ordinary least square, OLSという。 6.3 独立変数がカテゴリ変数の場合 6.3.1 2値のカテゴリ 線形回帰分析では、連続変数だけではなく、カテゴリ変数も扱うことができる。その例としてまず、性別によって賃金がどの程度異なるのかを知りたいとする。このとき、（無理やり）散布図を書くと、次のようになる。分布がわかりやすいように、バイオリン・プロットを重ねて示している。 piaac %&gt;% ggplot(aes(x = gender, y = wage)) + geom_violin() + geom_point(shape = 1) 図からわかる通り、男性と比べると女性の賃金が低いことがわかる。平均値を計算して棒グラフにしてみてみよう。 piaac %&gt;% group_by(gender) %&gt;% summarize(mean = mean(wage, na.rm = TRUE)) %&gt;% ggplot(aes(x = gender, y = mean)) + geom_col() + geom_text(aes(label = round(mean, digit = 0)), vjust = -1) + ylim(0, 2500) ここで得られた男性の平均値と女性の平均値をそれぞれ散布図に書き入れてみたのが次の図である。実線が男性の平均値、点線が女性の平均値を表している。 meandata &lt;- piaac %&gt;% group_by(gender) %&gt;% summarize(mean_wage = mean(wage, na.rm = TRUE)) piaac %&gt;% ggplot(aes(x = gender, y = wage)) + geom_violin() + geom_point(shape = 1) + geom_hline(yintercept = meandata$mean_wage[1]) + geom_hline(yintercept = meandata$mean_wage[2], lty = 2) いま、男性であれば1、女性であれば0をとる変数\\(x\\)を考えよう。このように、カテゴリ変数のカテゴリを区別するために便宜的に0/1の値を振った変数のことを、ダミー変数 dummy variableという。このとき、性別による賃金の違いを表す回帰式は次のようになる： \\[ y = \\beta_0 + \\beta_1x \\] 回帰式のかたちは先ほどと同じとなる。傾き\\(\\beta_1\\)は、女性（0）とくらべて男性（1）がどの程度賃金が高いのかを示している。実際、この係数を推定してみよう。 piaac &lt;- piaac %&gt;% mutate(male_d = case_when( gender == &quot;男性&quot; ~ 1, gender == &quot;女性&quot; ~ 0 )) piaac %&gt;% select(gender, male_d) %&gt;% sample_n(size = 6) # どのような値になっているかをチェック。 ## # A tibble: 6 x 2 ## gender male_d ## &lt;fct&gt; &lt;dbl&gt; ## 1 女性 0 ## 2 女性 0 ## 3 男性 1 ## 4 女性 0 ## 5 男性 1 ## 6 男性 1 reg_res &lt;- lm(data = piaac, wage ~ male_d) summary(reg_res) ## ## Call: ## lm(formula = wage ~ male_d, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1888.3 -610.1 -327.6 368.1 8672.4 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1327.59 30.21 43.95 &lt;2e-16 *** ## male_d 868.43 41.94 20.71 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1125 on 2880 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.1296, Adjusted R-squared: 0.1293 ## F-statistic: 428.7 on 1 and 2880 DF, p-value: &lt; 2.2e-16 male_dというのが、性別が男性のときに1、女性のときに0をとる変数である。この係数は傾き\\(\\beta_1\\)に対応し、切片（Intercept）は切片\\(\\beta_0\\)に対応する。つまり、推定された式は次のようになる： \\[ y = 1328 + 868x \\] つまり、女性（x = 0）とくらべて男性（x = 1）の賃金は868円高いということを意味している。 この値が、2つのカテゴリ（この場合は男性・女性）、先ほど棒グラフに示した男性の平均値と女性の平均値の差に一致していることを確認しよう。傾きの値は、2つのカテゴリの平均値の差に一致する。 6.3.2 3値以上のカテゴリ カテゴリが3値以上の場合はどうだろう？これも、基本的には同じふうに考えることができる。 piaac %&gt;% filter(is.na(educ) == FALSE) %&gt;% ggplot(aes(x = educ, y = wage)) + geom_violin() + geom_point(shape = 1) 中学卒を基準として、高校、短大高専、大学大学院卒だとどれくらい賃金が高いのかを推定することになる。 piaac &lt;- piaac %&gt;% mutate(educ_d2 = if_else(educ == &quot;高校&quot;, 1, 0)) %&gt;% mutate(educ_d3 = if_else(educ == &quot;短大高専&quot;, 1, 0)) %&gt;% mutate(educ_d4 = if_else(educ == &quot;大学大学院&quot;, 1, 0)) piaac %&gt;% select(educ, educ_d2, educ_d3, educ_d4) %&gt;% sample_n(size = 10) #それぞれどのような値となっているかチェック。 ## # A tibble: 10 x 4 ## educ educ_d2 educ_d3 educ_d4 ## &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 短大高専 0 1 0 ## 2 大学大学院 0 0 1 ## 3 中学 0 0 0 ## 4 大学大学院 0 0 1 ## 5 短大高専 0 1 0 ## 6 大学大学院 0 0 1 ## 7 高校 1 0 0 ## 8 大学大学院 0 0 1 ## 9 高校 1 0 0 ## 10 短大高専 0 1 0 reg_res &lt;- lm(data = piaac, wage ~ educ_d2 + educ_d3 + educ_d4) summary(reg_res) ## ## Call: ## lm(formula = wage ~ educ_d2 + educ_d3 + educ_d4, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2035.1 -692.6 -316.9 390.7 8450.0 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1453.13 72.82 19.954 &lt;2e-16 *** ## educ_d2 66.61 81.20 0.820 0.412 ## educ_d3 96.89 84.37 1.149 0.251 ## educ_d4 889.67 82.23 10.819 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1145 on 2878 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.09976, Adjusted R-squared: 0.09882 ## F-statistic: 106.3 on 3 and 2878 DF, p-value: &lt; 2.2e-16 それぞれの係数は、基準カテゴリ（今回なら中学卒）と比べて、それぞれどれくらい賃金が高いのかを表している。標準誤差やp値のみかたについてはどれも同じ。 6.3.3 変数がfactorであれば自動でカテゴリとして投入される 独立変数の型がカテゴリの場合には、Rが自動で先ほどのようなダミー変数を勝手に作って投入してくれる。 reg_res &lt;- lm(data = piaac, wage ~ educ) summary(reg_res) ## ## Call: ## lm(formula = wage ~ educ, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2035.1 -692.6 -316.9 390.7 8450.0 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1453.13 72.82 19.954 &lt;2e-16 *** ## educ高校 66.61 81.20 0.820 0.412 ## educ短大高専 96.89 84.37 1.149 0.251 ## educ大学大学院 889.67 82.23 10.819 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1145 on 2878 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.09976, Adjusted R-squared: 0.09882 ## F-statistic: 106.3 on 3 and 2878 DF, p-value: &lt; 2.2e-16 ただし、基準カテゴリは一番最初（アルファベットが早い順、漢字の場合はよくわからない）のものが勝手に選ばれるので、たとえば高校を基準にしてその他を比較したい、と思ったときには、自分でカテゴリの順序を変更しておく必要がある。 piaac &lt;- piaac %&gt;% mutate(educ_reorder = factor(educ, levels = c(&quot;高校&quot;, &quot;中学&quot;, &quot;短大高専&quot;, &quot;大学大学院&quot;), labels = c(&quot;高校&quot;, &quot;中学&quot;, &quot;短大高専&quot;, &quot;大学大学院&quot;))) reg_res &lt;- lm(data = piaac, wage ~ educ_reorder) summary(reg_res) ## ## Call: ## lm(formula = wage ~ educ_reorder, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2035.1 -692.6 -316.9 390.7 8450.0 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1519.75 35.92 42.304 &lt;2e-16 *** ## educ_reorder中学 -66.61 81.20 -0.820 0.412 ## educ_reorder短大高専 30.28 55.72 0.543 0.587 ## educ_reorder大学大学院 823.06 52.43 15.697 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1145 on 2878 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.09976, Adjusted R-squared: 0.09882 ## F-statistic: 106.3 on 3 and 2878 DF, p-value: &lt; 2.2e-16 6.4 従属変数が2値のカテゴリ変数（0/1）の場合 たとえば、性別によってこの1年間に職場での訓練（OJTとよぶ）を受ける率が異なっているかどうかを知りたいとする。これも今までと同じように回帰分析の枠組みで扱うことができる。 まず、OJTを受けたならば1、受けていないならば0を取る変数があるとする。この値の平均をとれば、OJTを受けた人の割合に一致する。たとえば以下の2つを比較してみよう。 piaac %&gt;% tbl_cross(gender, ojt, percent = &quot;row&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #mvlpamufqi .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #mvlpamufqi .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mvlpamufqi .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #mvlpamufqi .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #mvlpamufqi .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mvlpamufqi .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #mvlpamufqi .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #mvlpamufqi .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #mvlpamufqi .gt_column_spanner_outer:first-child { padding-left: 0; } #mvlpamufqi .gt_column_spanner_outer:last-child { padding-right: 0; } #mvlpamufqi .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #mvlpamufqi .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #mvlpamufqi .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #mvlpamufqi .gt_from_md > :first-child { margin-top: 0; } #mvlpamufqi .gt_from_md > :last-child { margin-bottom: 0; } #mvlpamufqi .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #mvlpamufqi .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #mvlpamufqi .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mvlpamufqi .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #mvlpamufqi .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #mvlpamufqi .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #mvlpamufqi .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #mvlpamufqi .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #mvlpamufqi .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mvlpamufqi .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #mvlpamufqi .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #mvlpamufqi .gt_sourcenote { font-size: 90%; padding: 4px; } #mvlpamufqi .gt_left { text-align: left; } #mvlpamufqi .gt_center { text-align: center; } #mvlpamufqi .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #mvlpamufqi .gt_font_normal { font-weight: normal; } #mvlpamufqi .gt_font_bold { font-weight: bold; } #mvlpamufqi .gt_font_italic { font-style: italic; } #mvlpamufqi .gt_super { font-size: 65%; } #mvlpamufqi .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic ojt Total 0 1 gender 女性 1,092 (69%) 488 (31%) 1,580 (100%) 男性 1,150 (63%) 689 (37%) 1,839 (100%) Total 2,242 (66%) 1,177 (34%) 3,419 (100%) ついで、性別ごとにojtの平均値を計算し、図に書いてみる。 piaac %&gt;% group_by(gender) %&gt;% summarize(mean_ojt = mean(ojt, na.rm = TRUE)) %&gt;% ggplot(aes(x = gender, y = mean_ojt)) + geom_col() + geom_text(aes(label = round(mean_ojt, digit = 3)), vjust = -1) + ylim(0, 0.4) ここで示された値は、上記クロス表の「1」のほうに示されている行%、すなわち「OJTを受けた人の割合」に一致している。 では、回帰式を推定してみよう。 reg_res &lt;- lm(data = piaac, ojt ~ gender) summary(reg_res) ## ## Call: ## lm(formula = ojt ~ gender, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.3747 -0.3747 -0.3089 0.6253 0.6911 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.30886 0.01193 25.894 &lt; 2e-16 *** ## gender男性 0.06580 0.01626 4.046 5.33e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4741 on 3417 degrees of freedom ## Multiple R-squared: 0.004767, Adjusted R-squared: 0.004476 ## F-statistic: 16.37 on 1 and 3417 DF, p-value: 5.332e-05 「gender男性」と書かれている行が、女性と比べて男性が6.6%ポイントOJTを受ける割合が高いのかを示している）。この値が、ちょうど先ほどの棒グラフの男性と女性の割合（平均値）の差に一致していることを確認しよう。係数の見方も、標準誤差も、p値も、すべて今までの回帰分析と一緒。 もちろん、年齢などの連続変数を独立変数（X）として使うこともできる。 6.4.1 （発展）ロバスト標準誤差 上記のように従属変数が2値の場合の線形回帰分析のことを線形確率モデル linear probability modelと呼ぶことがある。線形確率モデルの場合は、誤差が正規分布するという仮定に反し、普通の標準誤差は誤った値になってしまうことが知られている。そこで、こうした不均一分散の問題に対処するために、ロバスト標準誤差を用いることが推奨されている。 ここではロバスト標準誤差のことについては説明しないし、授業でも使う必要はないが、推定の仕方だけ書いておく。estimatr::lm_robust()で、ロバスト標準誤差を得ることができる。使い方はこのページにくわしい。 install.packages(&quot;estimatr&quot;) #未インストールの場合のみ library(estimatr) reg_res &lt;- lm_robust(data = piaac, ojt ~ gender) summary(reg_res) ## ## Call: ## lm_robust(formula = ojt ~ gender, data = piaac) ## ## Standard error type: HC2 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) CI Lower CI Upper DF ## (Intercept) 0.3089 0.01163 26.56 1.676e-141 0.28606 0.33166 3417 ## gender男性 0.0658 0.01621 4.06 5.018e-05 0.03402 0.09758 3417 ## ## Multiple R-squared: 0.004767 , Adjusted R-squared: 0.004476 ## F-statistic: 16.48 on 1 and 3417 DF, p-value: 5.018e-05 6.5 非線形の関連：対数変換 6.5.1 対数変換とは 用いる変数が正規分布から乖離しているときや、変数の単位に依存せず効果の大きさを測定したいときには、変数を対数変換することを検討するとよい。社会科学系では、底がeの対数（自然対数）を取ることで変数を対数変換することが多い。Rではlog()という関数で自然対数変換ができる。次のようにして、賃金を対数変換した変数を作ることができる。 piaac &lt;- piaac %&gt;% mutate(logwage = log(wage)) 2つの変数の分布を比較してみよう。 piaac %&gt;% ggplot(aes(x = wage)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. piaac %&gt;% ggplot(aes(x = logwage)) + geom_histogram() ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. 対数変換した後の変数は、対数変換する前の変数よりも正規分布に近づいていることがわかる。 6.5.2 自然対数と対数関数について \\[ e = \\lim_{t\\rightarrow0}(1 + t)^{\\frac{1}{t}} \\simeq 2.7182818\\cdots \\] で定義される数のことをネイピア数といい、\\(e\\)と書く（円周率\\(\\pi\\)みたいな感じ）。慣習上、ネイピア数\\(e\\)を底とする指数\\(e^x\\)を\\(\\exp(x)\\)と表記したりする。 \\(\\log_a x\\)のように表される関数を対数関数といい、次のように定義される： \\[ a^y = x \\leftrightarrow y = \\log_a x \\] とくに底が\\(e\\)の場合を自然対数という。社会科学系の文脈ではこのときには底を省略して、\\(e^y = x \\leftrightarrow y = \\log(x)\\)というふうに書かれることが多い。 6.5.3 対数を使った場合の回帰分析 先にみたように、対数賃金と年齢との散布図を書くと、次のようになる。 piaac %&gt;% ggplot(aes(x = age, y = logwage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, se = FALSE) ## `geom_smooth()` using formula &#39;y ~ x&#39; 対数変換した後の賃金を従属変数として、回帰分析を推定してみよう。 reg_res &lt;- lm(data = piaac, logwage ~ age) summary(reg_res) ## ## Call: ## lm(formula = logwage ~ age, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.59633 -0.46971 -0.03937 0.39219 1.91365 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 7.1331862 0.0434355 164.225 &lt; 2e-16 *** ## age 0.0040713 0.0009592 4.245 2.26e-05 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.561 on 2880 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.006217, Adjusted R-squared: 0.005872 ## F-statistic: 18.02 on 1 and 2880 DF, p-value: 2.259e-05 なお、対数変換した変数を新たに作成しなくても、次のように書くことで、回帰分析のコード中で対数変換を行う事ができる。以下でも同じ結果を得ることができる（結果は省略）。 lm(data = piaac, log(wage) ~ age) ## [1] 0.004 年齢の係数は、年齢が1歳高いと、対数賃金が0.004ポイント高いということを意味する。対数をとった場合、（微小な）変化は%の変化に一致する（後述）。すなわち、年齢が1歳高いと、賃金が0.4%高い（10歳高いと、4%高い）ということを意味している。 6.5.4 対数を使った場合の回帰分析：なぜ%になるのか 以下のような単回帰分析について考える。 \\[ y = \\beta_0 + \\beta_1x \\] このとき、\\(x\\)を1単位増やしたときの\\(y\\)の変化分を\\(\\Delta y\\)と表すことにする。すると \\[ \\begin{align} y + \\Delta y &amp;= \\beta_0 + \\beta_1 (x + 1) \\\\ y + \\Delta y &amp;= (\\beta_0 + \\beta_1 x) + \\beta_1 \\\\ \\Delta y &amp;= \\beta_1 \\\\ \\end{align} \\] \\(\\Delta y = \\beta_1\\)となる。すなわち、\\(\\beta_1\\)は、\\(x\\)を1単位増やしたときに\\(y\\)がどれだけ増えるかに一致する。 では、次のような式のときはどうだろうか？ \\[ \\log(y) = \\beta_0 + \\beta_1x \\] 同じように、\\(x\\)が1単位増えたときの\\(y\\)の変化分を\\(\\Delta y\\)と表すことにする。すると、 \\[ \\begin{aligned} \\log(y + \\Delta y) &amp;= \\beta_0 + \\beta_1(x + 1) \\\\ y + \\Delta y &amp;= \\exp(\\beta_0 + \\beta_1x + \\beta_1) \\\\ y + \\Delta y &amp;= \\exp(\\beta_1)\\exp(\\beta_0 + \\beta_1x) \\\\ y + \\Delta y &amp;= \\exp(\\beta_1)y \\\\ \\Delta y &amp;= (\\exp(\\beta_1) - 1)y \\end{aligned} \\] となり、xが1単位増えたときに\\(y\\)は\\((\\exp(\\beta_1) - 1)\\)倍ぶんだけ増える、ということがわかる。実際の値を計算してみると、次のようになる： \\[ \\begin{align} \\beta_1 &amp;= 0.1 \\leftrightarrow \\exp(\\beta_1) - 1 \\simeq 0.11 \\\\ \\beta_1 &amp;= 0 \\leftrightarrow \\exp(\\beta_1) - 1 \\simeq 0 \\\\ \\beta_1 &amp;= -0.1 \\leftrightarrow \\exp(\\beta_1) - 1\\simeq -0.10 \\\\ \\end{align} \\] \\(\\beta_1\\)が0に近い値ならば、おおむね「\\(x\\)が1単位高いと、\\(y\\)が\\(100 \\times \\beta_1\\)%高い」といえる。 6.5.5 従属変数と独立変数の対数をとる 従属変数だけではなく、独立変数についても対数を取ることができる。その場合の解釈はそれぞれ次のようになる： 従属変数 独立変数 解釈 \\(y\\) \\(x\\) \\(x\\)が1単位高いと、\\(y\\)が\\(b_1\\)高い \\(\\log(y)\\) \\(x\\) \\(x\\)が1単位高いと、\\(y\\)が\\(100 \\times \\beta_1\\)%高い \\(y\\) \\(\\log(x)\\) \\(x\\)が1%高いと、\\(y\\)が\\(\\beta_1 / 100\\)高い \\(\\log(y)\\) \\(\\log(x)\\) \\(x\\)が1%高いと、\\(y\\)が\\(\\beta_1\\)%高い 6.6 非線形の関連：2次関数型 6.6.1 いつ2次関数型が役に立つか 年齢と賃金の関係は、たんに年齢が上がると賃金が上がるという線形の関連ではなく、年齢が上がるほど賃金の上昇が緩やかになっていって、ある程度年齢が上がると関係が反転する（負の関係になる）ということが考えられる。2次関数を使うことで、こうした関係をうまく表現できる。 \\[ y = \\beta_0 + \\beta_1x + \\beta_2x^2 \\] このような場合、\\(x\\)が1単位増加したときの\\(y\\)の増加量は、もともとの\\(x\\)の値によって異なる。\\(x\\)が1単位増えたときの\\(y\\)の変化分を\\(\\Delta y\\)と表すとすると、 \\[ \\begin{align} y + \\Delta y &amp;= \\beta_0 + \\beta_1(x + 1) + \\beta_2 (x + 1)^2 \\\\ &amp;= (\\beta_0 + \\beta_1x + \\beta_2x^2) + \\beta_1 + (2x + 1)\\beta_2 \\\\ \\Delta y &amp;= \\beta_1 + (2x + 1)\\beta_2 \\end{align} \\] となる。すなわち、\\(x\\)が1単位増加したときの\\(y\\)の増加量は、もともとの\\(x\\)の値によって異なるということになる。回帰式の形状や結果の読み方は次のようになる： \\(\\beta_2\\)の係数 解釈 形状 \\(\\beta_2 &lt; 0\\) xが大きいほど、x1単位の増加に対するyの増加量は小さい \\(-\\beta_1/2\\beta_2\\)を底とする、上に凸な2次関数 \\(\\beta_2 &gt; 0\\) xが大きいほど、x1単位の増加に対するyの増加量は大きい \\(-\\beta_1/2\\beta_2\\)を底とする、下に凸な2次関数 6.6.2 変数の作成と結果 年齢を2乗した変数は次のように作成できる。 piaac &lt;- piaac %&gt;% mutate(age_sq = age^2) 回帰分析を行ってみる： reg_res &lt;- lm(data = piaac, logwage ~ age + age_sq) summary(reg_res) ## ## Call: ## lm(formula = logwage ~ age + age_sq, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.67879 -0.45201 -0.02961 0.37393 1.99303 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 5.687e+00 1.759e-01 32.324 &lt;2e-16 *** ## age 7.312e-02 8.203e-03 8.913 &lt;2e-16 *** ## age_sq -7.749e-04 9.144e-05 -8.474 &lt;2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.5542 on 2879 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.0304, Adjusted R-squared: 0.02973 ## F-statistic: 45.13 on 2 and 2879 DF, p-value: &lt; 2.2e-16 二次曲線の場合、個々の係数だけではあまり解釈ができない。そこで、散布図と回帰直線（曲線）をみてみよう： piaac %&gt;% ggplot(aes(x = age, y = logwage)) + geom_point(shape = 1) + geom_smooth(method = &quot;lm&quot;, formula = y ~ poly(x, 2), se = FALSE) このように、若いときには年齢による賃金の上昇は大きいけれども、その上昇幅は年齢が高くなるほど小さくなり、高い年齢ではむしろ負に転ずることがわかる。年齢についてはこのように二次曲線をつかうことはしばしば有効だ。 なお2乗した変数を別に作らなくても、回帰分析のコード中で2乗した変数を作成することができる。（結果は省略） lm(data = piaac, log(wage) ~ age + I(age^2)) 6.7 結果をきれいに表示する 先ほどの回気分析の結果をもう少しきれいに表示したいと思うかもしれない。これまで、こうしたときにはtexregやstargazerなどといったパッケージが使われてきたが、最近はmodelsummaryというパッケージが開発され、これがなかなか良さそうという情報をキャッチしたので、使ってみよう（2021-10-27現在）。 はじめて使う場合はinstall.packages()。 install.packages(&quot;modelsummary&quot;) #未インストールの場合のみ library(modelsummary) では、実際に使ってみよう。msummary(list(model))（modelという部分には、すでに保存しておいた回帰分析の結果を入れる）というのが最低限のコマンド。 reg_res &lt;- lm(data = piaac, log(wage) ~ age + I(age^2)) msummary(list(reg_res)) Model 1 (Intercept) 5.687 (0.176) age 0.073 (0.008) I(age^2) −0.001 (0.000) Num.Obs. 2882 R2 0.030 R2 Adj. 0.030 AIC 4781.8 BIC 4805.7 Log.Lik. −2386.921 F 45.131 よく論文でみる感じのきれいな見た目になる。とはいえ、まだたとえば変数名が何を指しているかなどは改善の余地がある。オプションを色々指定することで、よりわかりやすい表が作れる。 msummary(list(reg_res), stars = TRUE, # 有意水準を示す印をつける coef_rename = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;I(age^2)&quot; = &quot;年齢2乗&quot;), # 各変数に名前をつける gof_omit = &quot;R2 Adj.|AIC|BIC|Log.Lik.|F&quot;) # 不要な統計量を削除する Model 1 切片 5.687*** (0.176) 年齢 0.073*** (0.008) 年齢2乗 −0.001*** (0.000) Num.Obs. 2882 R2 0.030 + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 いい感じの表ができた！ "],["regression-advanced.html", "Chapter 7 重回帰分析の活用 7.1 説明 7.2 最小二乗法（OLS）（工事中） 7.3 交絡要因の統制 7.4 結果の比較と解釈 7.5 媒介分析／要因分解 7.6 重回帰分析の実際", " Chapter 7 重回帰分析の活用 以下の記述はすでにtidyverseパッケージを読み込んでおり、また読み込んだデータをpiaacというデータフレームに入れていることを前提とします。データフレームの名前はpiaacである必要はありません。以下のようなコードを実行していると思います。 library(tidyverse) piaac &lt;- read_csv(&quot;data/piaac.csv&quot;) また、Macでggplot2パッケージを使用し、グラフ中に日本語を使用する場合には、library(tidyverse)またはlibrary(ggplot2)を実行したうえで、たとえば以下のようなコードをあらかじめ実行しておく必要があります。 theme_set(theme_grey(base_family = &quot;HiraginoSans-W3&quot;)) この資料で使用しているグラフについては以下のようにthemeを設定しています。 theme_set(theme_bw( base_family = &quot;HiraginoSans-W3&quot;, base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) Windowsユーザの方は上記コードからbase_family =の行を除いたこちらのコードで同じような雰囲気になります： theme_set(theme_bw( base_size = 11, base_rect_size = 0.2, base_line_size = 0.2 )) 7.1 説明 先の単回帰分析では、年齢、性別、あるいは学歴によって賃金が異なっていることをみた。これら3つの変数を同時に考慮することで、賃金の分散をよりよく説明できるモデルを作ることができないだろうか？このようなときに役に立つのが、重回帰分析である。 今推定したい式は次のように書くことができる。 \\[ y = \\beta_0 + \\beta_1年齢 + \\beta_2女性 + \\beta_3高校卒 + \\beta_4短大高専卒 + \\beta_5大学大学院卒 \\] \\(\\beta_1\\)が年齢の係数、\\(\\beta_2\\)が（男性と比較したときの）女性の係数、\\(\\beta_3, \\beta_4, \\beta_5\\)が（中学卒と比較したときの）高校卒、短大高専卒、大学大学院卒の係数を、それぞれ表す。各係数は、他の変数を一定として（統制 controlして、ともいう）、当該変数が1単位高いと\\(y\\)がどれだけ高いのか、という独立の影響力を測っていることになる。 単回帰分析のときと同じように、lm()関数を使って推定することができる。 reg_res &lt;- lm(data = piaac, wage ~ age + gender + educ) summary(reg_res) ## ## Call: ## lm(formula = wage ~ age + gender + educ, data = piaac) ## ## Residuals: ## Min 1Q Median 3Q Max ## -2302.8 -610.3 -201.7 370.8 8294.8 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -16.213 118.100 -0.137 0.8908 ## age 20.567 1.866 11.024 &lt; 2e-16 *** ## gender男性 764.214 41.510 18.411 &lt; 2e-16 *** ## educ高校 222.962 76.064 2.931 0.0034 ** ## educ短大高専 466.890 80.649 5.789 7.84e-09 *** ## educ大学大学院 957.573 77.996 12.277 &lt; 2e-16 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1064 on 2876 degrees of freedom ## (537 observations deleted due to missingness) ## Multiple R-squared: 0.2226, Adjusted R-squared: 0.2213 ## F-statistic: 164.7 on 5 and 2876 DF, p-value: &lt; 2.2e-16 それぞれ係数、標準誤差、p値のみかたはいずれも前回と同じである。 一般に、重回帰分析の式は次のように書ける。 \\[ y = \\beta_0 + \\beta_1x_1 + \\beta_2x_2 + \\cdots + \\beta_kx_k \\] 係数\\(\\beta_1\\)は、他の変数\\(x_2, \\cdots, x_k\\)を一定としたうえで、\\(x_1\\)が1単位高いと\\(y\\)がどれだけ高いのかを示す。 7.2 最小二乗法（OLS）（工事中） 重回帰分析の係数はやはり最小二乗法によって推定される。 7.3 交絡要因の統制 では実際、重回帰分析はどのようなことを知りたいときに使うのだろうか。たとえば、高い学校段階を終えたこと（学歴）がどれくらい賃金を高めるのかを知りたいというモチベーションを持っているとする。もっともシンプルな方法が、前回みたように（単）回帰分析で学歴ごとに賃金を比較するという方法だ。 しかしこの方法では、学歴の効果を知るには不十分かもしれない。というのも、データには25歳から64歳まで幅広い年齢の対象者が含まれており、また男性も女性も含まれている。学歴別に書いた次の散布図を見てみよう： piaac %&gt;% ggplot(aes(x = age, y = wage, color = gender)) + geom_point(shape = 1) + facet_wrap(~educ) + labs(color = &quot;&quot;) 高学歴化が進んだ影響で、中学卒の人には年齢の高い（古い年の生まれの）人が多く、短大高専や大学卒の人には年齢の低い人が多い。年齢が高くなるにつれて賃金が高くなるという傾向があるから、たんに学歴ごとに平均値をとったときには、このような年齢分布の違いは、中学卒の見かけの賃金を高く、短大高専卒や大学卒の見かけの賃金を低く見せるだろう。 性別も重要だ。たとえば短大高専卒では男性よりも女性が多く、大学卒では女性よりも男性が多い。男性のほうが（さまざまな理由によって）女性よりも賃金高い傾向があるから、このような性別分布の違いは、短大高専卒の見かけの賃金を低く、大学卒の見かけの賃金を高く見せるだろう。 以上のような分布の違いを一定としたうえで学歴と賃金の関係をみることができたなら、「学歴はどの程度賃金を高める効果を持つのか」という問いの答えに近づくことができる。重回帰分析は、こうしたモチベーションに答えるための方法だ。 このときのモチベーションを図にすると、次のようなかたちになる。 Xを学歴、Yを賃金、Zを性別や年齢と考えよう。知りたいのは学歴が賃金に与える効果（X -&gt; Y）だが、その背後にはXにもYにも影響する要因Z（Z -&gt; X、Z -&gt; Y）が存在する。そのため、学歴が賃金に与える効果をみたいのならば、Zを一定とする必要がある。このように、XとYの両者に影響する要因を交絡要因 confounderとよぶ。 複数の変数を使うときの回帰分析では、関心のある変数xと、統制したい変数zというふうに別々の役割があるということが多い。 7.4 結果の比較と解釈 性別や年齢といった交絡要因を考慮しない単回帰分析と、重回帰分析を比較してみよう。この例のように、回帰分析の表を作るとき、カテゴリ変数については比較対象（参照カテゴリ）が何かを書くと、わかりやすいだろう。 reg_res1 &lt;- lm(data = piaac, wage ~ educ) reg_res2 &lt;- lm(data = piaac, wage ~ age + gender + educ) msummary(list(reg_res1, reg_res2), stars = TRUE, coef_rename = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;gender男性&quot; = &quot;男性（vs. 女性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot; ), gof_omit = &quot;R2 Adj.|AIC|BIC|Log.Lik.|F&quot;) Model 1 Model 2 切片 1453.133*** −16.213 (72.823) (118.100) 高校（vs. 中学） 66.614 222.962** (81.202) (76.064) 短大高専（vs. 中学） 96.895 466.890*** (84.365) (80.649) 大学大学院（vs. 中学） 889.671*** 957.573*** (82.231) (77.996) 年齢 20.567*** (1.866) 男性（vs. 女性） 764.214*** (41.510) Num.Obs. 2882 2882 R2 0.100 0.223 + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 Model 1とModel 2とでは、学歴の係数が違っていることがわかる。Model 1では、中学卒の人とくらべて高校卒では223円、短大高専卒では467円、大学大学院卒では958円、賃金が高いことがわかる。 一方で性別と年齢を一定としたModel 2では、学歴の係数は大きく異なっている。とくに、短大高専卒の係数に注目してみよう。Model 1と比べるとその係数はかなり大きくなっている。先にみたように、高学歴の人には（平均的にみて賃金が低い）若い人が多く、また短大高専卒には（平均的にみて賃金が低い）女性が多かった。これらの影響のために、中学卒との見かけの賃金の差（Model 1）は小さめに見えていた。しかし、これら性別と年齢の影響を除く（一定とする）ことによって、短大高専を卒業することによる賃金上昇をより正確に捉えることができるようになったといえる。その他の学歴についても、Model 1と比べると、学歴が賃金を高める効果の推定に近づいているといえる。 もちろん、性別や年齢だけではなくほかにもさまざまな要因が絡んでくるから、これだけでは学歴が賃金に与える効果を完璧に正しく推定しているというわけではない。しかし、このように要因を統制することで、学歴が賃金を高める効果の推定値に近づいていくことができる。 7.5 媒介分析／要因分解 7.5.1 モチベーション 女性は男性と比べて賃金が低い（男女間賃金格差）。たとえばその原因には、(1) 女性が男性よりも教育水準（学歴）が低い、(2) 女性が男性よりもスキルレベル（ここでは、PIAACの試験で測定された数的思考力のスコアとする）が低い、ということがありえるだろう。このような原因を調べるというときにも、重回帰分析を活用することができる。 性別をX、賃金をY、学歴およびスキルレベルをMとすると、ここでのアイデアは次のような図に表すことができる。 性別が賃金に与える効果は、(1) 女性の教育水準やスキルレベルが低く、したがって賃金も低い（X -&gt; M -&gt; Y）という部分と、(2) 教育水準やスキルレベルを一定としてもなお女性のほうが賃金が低い（X -&gt; Y | M）という部分とに分けることができる。このようにして、XとYの中間にある要因を考えることでグループ間の差や独立変数の効果を分けていくことを指して、媒介分析 mediation analysisや要因分解decompositionなどという。 piaac &lt;- piaac %&gt;% mutate(female_d = if_else(gender == &quot;女性&quot;, 1, 0)) reg_res1 &lt;- lm(data = piaac, wage ~ female_d) reg_res2 &lt;- lm(data = piaac, wage ~ female_d + educ) reg_res3 &lt;- lm(data = piaac, wage ~ female_d + educ + numeracy) msummary(list(reg_res1, reg_res2, reg_res3), stars = TRUE, coef_rename = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;female_d&quot; = &quot;女性（vs. 男性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot;, &quot;numeracy&quot; = &quot;数的思考力&quot;), gof_omit = &quot;R2 Adj.|AIC|BIC|Log.Lik.|F&quot;) Model 1 Model 2 Model 3 切片 2196.024*** 1775.142*** 788.177*** (29.096) (71.407) (153.382) 女性（vs. 男性） −868.433*** −757.489*** −727.165*** (41.941) (42.366) (42.198) 高校（vs. 中学） 125.961 4.468 (77.120) (78.251) 短大高専（vs. 中学） 299.462*** 140.175+ (80.847) (83.087) 大学大学院（vs. 中学） 796.258*** 523.987*** (78.199) (86.119) 数的思考力 3.878*** (0.535) Num.Obs. 2882 2882 2882 R2 0.130 0.190 0.204 + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 Model 1では女性は男性に比して-868円賃金が低いということがわかる。 Model 2では、学歴を追加している。学歴の係数は正であり、学歴が高いほど、賃金は高い傾向があるといえる。学歴を一定とすると、女性の係数は-757となり、これはModel 1の女性の係数よりも小さい。すなわち、女性の賃金が低いことの一部は、学歴が低いために賃金が低い、ということによって生じているということがわかる。 Model 3ではさらに数的思考力を追加している。数的思考力の係数は正であり、数的思考力のスコアが高いほど、賃金が高い傾向があるといえる。学歴と数的思考力を一定とすると、女性の係数は-727となり、やはりModel 1の女性の係数よりも小さい。すなわち、女性の賃金が低いことの一部は、学歴が低いために賃金が低いこと、数的思考力スコアが低いために賃金が低いことによって生じているということがわかる。しかしながら、これらの個人属性を一定としてもなお、男女間には非常に大きな賃金格差が存在しているといえる。 7.5.2 （発展）係数変化の可視化 女性の係数を図にして表すことによって、それぞれの要因を追加したときの係数の違いを視覚的に把握しやすくなる。broomパッケージを使うことで、回帰分析の推定結果から係数や信頼区間に関する値を抽出し、それを使って図を作成することができる。 install.packages(&quot;broom&quot;) #未インストールの場合のみ library(broom) m1 &lt;- tidy(reg_res1, conf.int = TRUE) %&gt;% mutate(model = &quot;Model 1&quot;) m2 &lt;- tidy(reg_res2, conf.int = TRUE) %&gt;% mutate(model = &quot;Model 2&quot;) m3 &lt;- tidy(reg_res3, conf.int = TRUE) %&gt;% mutate(model = &quot;Model 3&quot;) m1 %&gt;% bind_rows(m2, m3) %&gt;% filter(term == &quot;female_d&quot;) %&gt;% ggplot(aes(x = model, y = estimate)) + geom_point() + geom_pointrange(aes(ymax = conf.high, ymin = conf.low)) + geom_text(aes(label = round(estimate, digit = 1)), hjust = 1.2) + ylim(-1000, 0) + geom_hline(yintercept = 0, lty = 2) + labs(x = &quot;&quot;, y = &quot;対数賃金の男女差&quot;, caption = &quot;注：Model 1は性別のみ、Model 2は学歴を統制、Model 3はさらに数的思考力を統制。&quot;) 7.6 重回帰分析の実際 実際の論文では、交絡要因の統制と媒介分析の両方を考慮しながら分析されることが多い。すなわち、次のような図になる。 たとえば、学歴が高いと賃金が高い（X -&gt; Y）のはなぜなのか知りたいとする。その原因の1つとして、学歴が高いとよりスキルレベルが高い（賃金の高い）職業につくことができるから（X -&gt; M -&gt; Y）、ということが考えられる。実際、学歴別に職業（ISCO 1-digit, 軍隊は除く）の分布を比べてみると、学歴が高いほど管理職や専門職といったスキルレベルの高い職業に就いている傾向があることがわかる。 piaac %&gt;% tbl_cross(educ, occupation, percent = &quot;row&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #dsfncixnrq .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #dsfncixnrq .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dsfncixnrq .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #dsfncixnrq .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #dsfncixnrq .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dsfncixnrq .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #dsfncixnrq .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #dsfncixnrq .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #dsfncixnrq .gt_column_spanner_outer:first-child { padding-left: 0; } #dsfncixnrq .gt_column_spanner_outer:last-child { padding-right: 0; } #dsfncixnrq .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #dsfncixnrq .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #dsfncixnrq .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #dsfncixnrq .gt_from_md > :first-child { margin-top: 0; } #dsfncixnrq .gt_from_md > :last-child { margin-bottom: 0; } #dsfncixnrq .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #dsfncixnrq .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #dsfncixnrq .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dsfncixnrq .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #dsfncixnrq .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #dsfncixnrq .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #dsfncixnrq .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #dsfncixnrq .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #dsfncixnrq .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dsfncixnrq .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #dsfncixnrq .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #dsfncixnrq .gt_sourcenote { font-size: 90%; padding: 4px; } #dsfncixnrq .gt_left { text-align: left; } #dsfncixnrq .gt_center { text-align: center; } #dsfncixnrq .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #dsfncixnrq .gt_font_normal { font-weight: normal; } #dsfncixnrq .gt_font_bold { font-weight: bold; } #dsfncixnrq .gt_font_italic { font-style: italic; } #dsfncixnrq .gt_super { font-size: 65%; } #dsfncixnrq .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Characteristic occupation Total 管理職 専門職 技術職・准専門職 事務補助 サービス・販売 農林漁業 技能工 設備・機械運転・組立 単純作業 educ 中学 8 (2.5%) 4 (1.3%) 15 (4.7%) 20 (6.3%) 68 (22%) 18 (5.7%) 84 (27%) 52 (16%) 47 (15%) 316 (100%) 高校 57 (4.7%) 41 (3.4%) 152 (13%) 209 (17%) 332 (27%) 33 (2.7%) 159 (13%) 147 (12%) 81 (6.7%) 1,211 (100%) 短大高専 34 (4.1%) 155 (19%) 138 (17%) 138 (17%) 212 (26%) 11 (1.3%) 78 (9.4%) 28 (3.4%) 33 (4.0%) 827 (100%) 大学大学院 150 (14%) 331 (31%) 238 (22%) 144 (14%) 120 (11%) 10 (0.9%) 38 (3.6%) 22 (2.1%) 12 (1.1%) 1,065 (100%) Total 249 (7.3%) 531 (16%) 543 (16%) 511 (15%) 732 (21%) 72 (2.1%) 359 (11%) 249 (7.3%) 173 (5.1%) 3,419 (100%) 先に確認したように、学歴と賃金の間には性別や年齢といった交絡要因が存在する（Z -&gt; X, Z -&gt; Y）。なので、あらかじめこれらを統制しておいたうえで、学歴による賃金の差が職業の違いによってどの程度説明されるのかというのをみる必要がある。 実際の分析結果は次のようになる。賃金については実額よりも対数を取った値のほうがよく使われるので、従属変数は対数賃金と使用。また賃金を従属変数とする回帰分析の場合、年齢の2乗も考慮することが多いので、2乗項についても投入しよう。 reg_res1 &lt;- lm(data = piaac, logwage ~ educ + gender + age + I(age^2)) reg_res2 &lt;- lm(data = piaac, logwage ~ educ + gender + age + I(age^2) + occupation) msummary(list(reg_res1, reg_res2), stars = TRUE, coef_rename = c(&quot;(Intercept)&quot; = &quot;切片&quot;, &quot;gender男性&quot; = &quot;男性（vs. 女性）&quot;, &quot;educ高校&quot; = &quot;高校（vs. 中学）&quot;, &quot;educ短大高専&quot; = &quot;短大高専（vs. 中学）&quot;, &quot;educ大学大学院&quot; = &quot;大学大学院（vs. 中学）&quot;, &quot;age&quot; = &quot;年齢&quot;, &quot;I(age^2)&quot; = &quot;年齢2乗&quot;, &quot;occupation専門職&quot; = &quot;専門職（vs. 管理職）&quot;, &quot;occupation技術職・准専門職&quot; = &quot;技術職・准専門職（vs. 管理職）&quot;, &quot;occupation事務補助&quot; = &quot;事務補助（vs. 管理職）&quot;, &quot;occupationサービス・販売&quot; = &quot;サービス・販売（vs. 管理職）&quot;, &quot;occupation農林漁業&quot; = &quot;農林漁業（vs. 管理職）&quot;, &quot;occupation技能工&quot; = &quot;技能工（vs. 管理職）&quot;, &quot;occupation設備・機械運転・組立&quot; = &quot;設備・機械運転・組立（vs. 管理職）&quot;, &quot;occupation単純作業&quot; = &quot;単純作業（vs. 管理職）&quot;), gof_omit = &quot;R2 Adj.|AIC|BIC|Log.Lik.|F&quot;) Model 1 Model 2 切片 5.123*** 6.218*** (0.152) (0.150) 高校（vs. 中学） 0.102** 0.034 (0.034) (0.032) 短大高専（vs. 中学） 0.224*** 0.060+ (0.036) (0.035) 大学大学院（vs. 中学） 0.463*** 0.191*** (0.035) (0.035) 男性（vs. 女性） 0.431*** 0.356*** (0.018) (0.019) 年齢 0.075*** 0.056*** (0.007) (0.007) 年齢2乗 −0.001*** −0.001*** (0.000) (0.000) 専門職（vs. 管理職） −0.190*** (0.037) 技術職・准専門職（vs. 管理職） −0.343*** (0.036) 事務補助（vs. 管理職） −0.502*** (0.038) サービス・販売（vs. 管理職） −0.661*** (0.037) 農林漁業（vs. 管理職） −0.726*** (0.088) 技能工（vs. 管理職） −0.577*** (0.041) 設備・機械運転・組立（vs. 管理職） −0.593*** (0.043) 単純作業（vs. 管理職） −0.747*** (0.049) Num.Obs. 2882 2882 R2 0.296 0.405 + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001 年齢と性別を統制したうえでの学歴の係数が、職業を考慮することによってどの程度変わるのかをみる。これをみると、Model 1と比べて、職業を一定としたModel 2では学歴の係数がかなり小さくなる。学歴が高いと賃金が高いという関連のかなりの部分が、職業分布の違いによって生じているようだということを、2つのモデルの学歴の係数の違いから読み取ることができる。 "],["domain.html", "Chapter 8 社会学のデータ分析でよくある処理 8.1 SSM職業小分類を大分類にまとめる 8.2 旧制学歴と新制学歴の対応 8.3 年収と労働時間から時間給を作成する", " Chapter 8 社会学のデータ分析でよくある処理 日本の社会学業界を念頭においたときのデータ分析でよくある処理についてランダムにまとめます。ただし内容は作成者（麦山）の経験と感覚によるもので、業界で標準的な手続きなのかどうかはわかりません。 8.1 SSM職業小分類を大分類にまとめる いくつかの調査では、調査対象者に仕事の内容を自由記述で尋ね、その回答をもとに、職業名を割り当てているものがある。このときに使われる職業分類が1995年SSM職業小分類と呼ばれるものである。1995年SSM職業章分類は約200の小分類からなり、それぞれの職業に番号が振られている。この番号を振った調査を以下に列挙する。 調査名 調査年 現職職業小分類 初職職業小分類 前職職業小分類 15歳時父親職業小分類 15歳時母親職業小分類 社会階層と社会移動調査（SSM） 1995 有 有 有（職歴変数を使えば可能、今回は省略） 有（「主な仕事」） 有（「主な仕事」） 2005 有 有 有（職歴変数を使えば可能、今回は省略） 有 有 2015 有 有 有（職歴変数を使えば可能、今回は省略） 有 有 日本版総合的社会調査（JGSS） 2000 有 有 有（無職で就業経験ある者のみ） 有 2001 有 有 有（無職で就業経験ある者のみ） 有 2002 有 有 有（無職で就業経験ある者のみ） 有 2003 有 有 2005 有 有 有 2006 有 有 有 2008 有 有 有 2010 有 有 有 2012 有 有 有（無職で就業経験ある者のみ） 有 2015 有 有 有（無職で就業経験ある者のみ） 有 東大社研パネル調査（JLPS） 2007-2020 有 有 有 有 ふつうはこうした200個近い分類をそのまま分析に使うということはなく、少数のカテゴリにまとめて使う。カテゴリへのまとめ方はいくつも種類があるが、ここでは代表的なものとして「SSM職業大分類」と「国勢調査職業分類」の2つを準備する。 なおこの2つへの割当てについては麦山が作成したが、妥当かどうかは各自確認すること。700番台、800番台にも有効なコードを振っている。また888や8888（非該当）、999や9999（無回答）はNAとなるようにしている。 8.1.1 JGSSの場合 たとえばこのようなデータフレーム（jgssとする）があったとする。 jgss %&gt;% head() ## # A tibble: 4 x 4 ## xxjob xxlstjb xxfstjb ppjbxx15 ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 509 888 573 531 ## 2 606 888 571 999 ## 3 554 888 558 681 ## 4 999 556 559 588 次のようなコードを実行することで、現職、初職、前職、父職のそれぞれに対して2種類の職業大分類を付与することができる。前職に関する質問項目が含まれていない場合には、前職に関わる部分のコードを削除する必要がある。 また、読み込んだデータ形式によっては変数名が大文字のことがある（xxjobではなくXXJOBというように）。このような場合は手持ちのデータの変数名を小文字に変換するか、以下のコードのxxjobなどを大文字に直すかどちらかを行う必要がある。 ssm_code &lt;- read_csv(&quot;https://raw.githubusercontent.com/mugiyama/seminar_sociology_r/master/data/ssm_occupation_code.csv&quot;) ## ## ─ Column specification ──────────────────────────── ## cols( ## ssm1995 = col_double(), ## ssmocc = col_double(), ## censusocc = col_double() ## ) ssm_code_current &lt;- ssm_code %&gt;% rename(xxjob = 1, ssmocc_current = 2, censusocc_current = 3) ssm_code_first &lt;- ssm_code %&gt;% rename(xxfstjb = 1, ssmocc_first = 2, censusocc_first = 3) ssm_code_last &lt;- ssm_code %&gt;% rename(xxlstjb = 1, ssmocc_last = 2, censusocc_last = 3) # 前職が含まれていないJGSSデータの場合は削除 ssm_code_father &lt;- ssm_code %&gt;% rename(ppjbxx15 = 1, ssmocc_father = 2, censusocc_father = 3) label_ssm &lt;- c(&quot;専門&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;熟練&quot;,&quot;半熟練&quot;,&quot;非熟練&quot;,&quot;農業&quot;) label_census &lt;- c(&quot;専門・技術&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;サービス&quot;,&quot;保安&quot;,&quot;農林漁業&quot;,&quot;運輸・通信&quot;,&quot;製造・制作&quot;,&quot;定置機関運転・建設機械運転・電気作業&quot;,&quot;採掘・建設・労務&quot;) jgss &lt;- jgss %&gt;% left_join(ssm_code_current, by = &quot;xxjob&quot;) %&gt;% left_join(ssm_code_first, by = &quot;xxfstjb&quot;) %&gt;% left_join(ssm_code_last, by = &quot;xxlstjb&quot;) %&gt;% # 前職が含まれていないJGSSデータの場合は削除 left_join(ssm_code_father, by = &quot;ppjbxx15&quot;) %&gt;% mutate(ssmocc_current_name = factor(ssmocc_current, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_first_name = factor(ssmocc_first, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_last_name = factor(ssmocc_last, levels = 1:8, labels = label_ssm)) %&gt;% # 前職が含まれていないJGSSデータの場合は削除 mutate(ssmocc_father_name = factor(ssmocc_father, levels = 1:8, labels = label_ssm)) %&gt;% mutate(censusocc_current_name = factor(censusocc_current, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_first_name = factor(censusocc_first, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_last_name = factor(censusocc_last, levels = 1:11, labels = label_census)) %&gt;% # 前職が含まれていないJGSSデータの場合は削除 mutate(censusocc_father_name = factor(censusocc_father, levels = 1:11, labels = label_census)) もともとの変数と作成した変数の一覧を確認しておく。 jgss %&gt;% glimpse() ## Rows: 4 ## Columns: 20 ## $ xxjob &lt;dbl&gt; 509, 606, 554, 999 ## $ xxlstjb &lt;dbl&gt; 888, 888, 888, 556 ## $ xxfstjb &lt;dbl&gt; 573, 571, 558, 559 ## $ ppjbxx15 &lt;dbl&gt; 531, 999, 681, 588 ## $ ssmocc_current &lt;dbl&gt; 1, 6, 3, NA ## $ censusocc_current &lt;dbl&gt; 1, 8, 3, NA ## $ ssmocc_first &lt;dbl&gt; 4, 4, 3, 3 ## $ censusocc_first &lt;dbl&gt; 4, 4, 3, 3 ## $ ssmocc_last &lt;dbl&gt; NA, NA, NA, 3 ## $ censusocc_last &lt;dbl&gt; NA, NA, NA, 3 ## $ ssmocc_father &lt;dbl&gt; 1, NA, 5, 4 ## $ censusocc_father &lt;dbl&gt; 1, NA, 14, 5 ## $ ssmocc_current_name &lt;fct&gt; 専門, 半熟練, 事務, NA ## $ ssmocc_first_name &lt;fct&gt; 販売, 販売, 事務, 事務 ## $ ssmocc_last_name &lt;fct&gt; NA, NA, NA, 事務 ## $ ssmocc_father_name &lt;fct&gt; 専門, NA, 熟練, 販売 ## $ censusocc_current_name &lt;fct&gt; 専門・技術, 運輸・通信, 事務, NA ## $ censusocc_first_name &lt;fct&gt; 販売, 販売, 事務, 事務 ## $ censusocc_last_name &lt;fct&gt; NA, NA, NA, 事務 ## $ censusocc_father_name &lt;fct&gt; 専門・技術, NA, NA, サービス 8.1.2 SSMの場合 たとえばこのようなデータフレーム（ssmとする）があったとする。 ssm %&gt;% head() ## # A tibble: 4 x 4 ## q02d q07f q23_1d q23_3d ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 608 539 601 531 ## 2 597 687 655 999 ## 3 588 631 554 681 ## 4 999 665 545 588 次のようなコードを実行することで、現職、初職、前職、父職のそれぞれに対して2種類の職業大分類を付与することができる。前職に関する質問項目が含まれていない場合には、前職に関わる部分のコードを削除する必要がある。 ssm_code &lt;- read_csv(&quot;https://raw.githubusercontent.com/mugiyama/seminar_sociology_r/master/data/ssm_occupation_code.csv&quot;) ## ## ─ Column specification ──────────────────────────── ## cols( ## ssm1995 = col_double(), ## ssmocc = col_double(), ## censusocc = col_double() ## ) ssm_code_current &lt;- ssm_code %&gt;% rename(q02d = 1, ssmocc_current = 2, censusocc_current = 3) ssm_code_first &lt;- ssm_code %&gt;% rename(q07f = 1, ssmocc_first = 2, censusocc_first = 3) ssm_code_father &lt;- ssm_code %&gt;% rename(q23_1d = 1, ssmocc_father = 2, censusocc_father = 3) ssm_code_mother &lt;- ssm_code %&gt;% rename(q23_3d = 1, ssmocc_mother = 2, censusocc_mother = 3) label_ssm &lt;- c(&quot;専門&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;熟練&quot;,&quot;半熟練&quot;,&quot;非熟練&quot;,&quot;農業&quot;) label_census &lt;- c(&quot;専門・技術&quot;,&quot;管理&quot;,&quot;事務&quot;,&quot;販売&quot;,&quot;サービス&quot;,&quot;保安&quot;,&quot;農林漁業&quot;,&quot;運輸・通信&quot;,&quot;製造・制作&quot;,&quot;定置機関運転・建設機械運転・電気作業&quot;,&quot;採掘・建設・労務&quot;) ssm &lt;- ssm %&gt;% left_join(ssm_code_current, by = &quot;q02d&quot;) %&gt;% left_join(ssm_code_first, by = &quot;q07f&quot;) %&gt;% left_join(ssm_code_father, by = &quot;q23_1d&quot;) %&gt;% left_join(ssm_code_mother, by = &quot;q23_3d&quot;) %&gt;% mutate(ssmocc_current_name = factor(ssmocc_current, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_first_name = factor(ssmocc_first, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_father_name = factor(ssmocc_father, levels = 1:8, labels = label_ssm)) %&gt;% mutate(ssmocc_mother_name = factor(ssmocc_mother, levels = 1:8, labels = label_ssm)) %&gt;% mutate(censusocc_current_name = factor(censusocc_current, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_first_name = factor(censusocc_first, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_father_name = factor(censusocc_father, levels = 1:11, labels = label_census)) %&gt;% mutate(censusocc_mother_name = factor(censusocc_mother, levels = 1:11, labels = label_census)) もともとの変数と作成した変数の一覧を確認しておく。 ssm %&gt;% glimpse() ## Rows: 4 ## Columns: 20 ## $ q02d &lt;dbl&gt; 608, 597, 588, 999 ## $ q07f &lt;dbl&gt; 539, 687, 631, 665 ## $ q23_1d &lt;dbl&gt; 601, 655, 554, 545 ## $ q23_3d &lt;dbl&gt; 531, 999, 681, 588 ## $ ssmocc_current &lt;dbl&gt; 2, 3, 4, NA ## $ censusocc_current &lt;dbl&gt; 8, 6, 5, NA ## $ ssmocc_first &lt;dbl&gt; 1, 7, 5, 5 ## $ censusocc_first &lt;dbl&gt; 1, 15, 11, 12 ## $ ssmocc_father &lt;dbl&gt; 8, 5, 3, 2 ## $ censusocc_father &lt;dbl&gt; 7, 12, 3, 2 ## $ ssmocc_mother &lt;dbl&gt; 1, NA, 5, 4 ## $ censusocc_mother &lt;dbl&gt; 1, NA, 14, 5 ## $ ssmocc_current_name &lt;fct&gt; 管理, 事務, 販売, NA ## $ ssmocc_first_name &lt;fct&gt; 専門, 非熟練, 熟練, 熟練 ## $ ssmocc_father_name &lt;fct&gt; 農業, 熟練, 事務, 管理 ## $ ssmocc_mother_name &lt;fct&gt; 専門, NA, 熟練, 販売 ## $ censusocc_current_name &lt;fct&gt; 運輸・通信, 保安, サービス, NA ## $ censusocc_first_name &lt;fct&gt; 専門・技術, NA, 採掘・建設・労務, NA ## $ censusocc_father_name &lt;fct&gt; 農林漁業, NA, 事務, 管理 ## $ censusocc_mother_name &lt;fct&gt; 専門・技術, NA, NA, サービス 8.2 旧制学歴と新制学歴の対応 広い年齢層を対象にした調査であったり、親の最終学歴を尋ねているような調査では、最終学歴の選択肢に戦前に卒業した人（旧制学歴保有者）が含まれていることがあり、質問項目の選択肢にも旧制学歴が含まれていることがある。こうした旧制学歴を戦後の新制学歴に合わせたい場合には、諸説あるが、たとえばもっとも教育年数の近い学歴に割り当てるという方法がある。 このような割り当てによる統合学歴の対応表を以下の3パターンにまとめた。 旧制学歴 新制学歴 統合学歴（5分類） 統合学歴（4分類） 統合学歴（3分類） 旧制尋常小学校 新制中学校 中学 中学 初等教育 旧制高等小学校 新制中学校 中学 中学 初等教育 旧制中学校・高等女学校 新制高校 高校 高校 中等教育 旧制実業学校 新制高校 高校 高校 中等教育 - 専修学校高等課程* 高校 高校 中等教育 - 専門学校（専修学校専門課程）* 専門学校 高校 高等教育** 旧制師範学校 新制短大・高専 短大高専 短大高専 高等教育 旧制高校・専門学校・高等師範学校 新制短大・高専 短大高専 短大高専 高等教育 旧制大学 新制大学 大学大学院 大学大学院 高等教育 旧制大学 新制大学院 大学大学院 大学大学院 高等教育 *専修学校高等課程は中学卒業者を対象として職業教育を実施する機関。専修学校専門課程は高校卒業者を対象として職業教育を実施する機関で、ふつう「専門学校」というときにはこちらを指すことが多い。調査票の選択肢に「専門学校」が設けられていた場合も、対象者はおそらくこちらを想定していると思われる。 **国際標準教育分類（ISCED2011）では専門学校はレベル5（Short-cycle tertiary education）とされており、高等教育相当とされている。 8.3 年収と労働時間から時間給を作成する 労働から得られる報酬を測定する場合、個人年収というのは必ずしも適切な指標ではないことがある。というのも、人によって労働時間の長さは違うので、同じ年収であったとしても、労働時間が短い人のほうがよりその報酬は高いと考えられるからだ。 8.3.1 SSM2005の例 そこで、年収を1時間あたりの年収（時間給）に直し、それを分析に用いることがある。いま、2005年SSM調査のデータを持っているとする（数値は架空例）。 変数 説明 q02f_w 週あたり労働時間。無回答の場合には9という値が入っている。 q02f_m 月あたり労働時間（週の労働時間を回答している場合は回答しない）。無回答の場合には99という値が入っている。 q02f_d 1日の労働時間 q33a 個人年収を区間（単位：万円）で尋ねた項目 ssm %&gt;% head() ## # A tibble: 6 x 4 ## q02f_d q02f_w q02f_m q33a ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 8 5 99 3 ## 2 4 4 99 5 ## 3 10 99 20 12 ## 4 9 99 15 9 ## 5 12 5 99 10 ## 6 5 1 99 4 このデータに対して以下のコードを実行することで、時間あたり賃金の変数wageを計算することができる。 ssm &lt;- ssm %&gt;% mutate(income = case_when( q33a == 1 ~ 0, q33a == 2 ~ 12.5, q33a == 3 ~ 37.5, q33a == 4 ~ 62.5, q33a == 5 ~ 87.5, q33a == 6 ~ 112.5, q33a == 7 ~ 137.5, q33a == 8 ~ 175, q33a == 9 ~ 225, q33a == 10 ~ 275, q33a == 11 ~ 325, q33a == 12 ~ 375, q33a == 13 ~ 425, q33a == 14 ~ 500, q33a == 15 ~ 600, q33a == 16 ~ 700, q33a == 17 ~ 800, q33a == 18 ~ 900, q33a == 19 ~ 1000, q33a == 20 ~ 1100, q33a == 21 ~ 1200, q33a == 22 ~ 1300, q33a == 23 ~ 1400, q33a == 24 ~ 1500, q33a == 25 ~ 1600, q33a == 26 ~ 1700, q33a == 27 ~ 1800, q33a == 28 ~ 1900, q33a == 29 ~ 2000, q33a == 30 ~ 2050 * 1.4)) %&gt;% mutate(workhour = if_else(q02f_d &lt; 98, q02f_d, NA_real_)) %&gt;% mutate(workmonth = case_when( q02f_m &lt; 98 ~ q02f_m, (q02f_m == 98 | q02f_m == 99) &amp; q02f_w &lt; 8 ~ q02f_w * 4, (q02f_m == 98 | q02f_m == 99) &amp; (q02f_w == 8 | q02f_w == 9) ~ NA_real_ )) %&gt;% mutate(wage = income * 10000 / (workhour * workmonth * 12)) ssm %&gt;% head() ## # A tibble: 6 x 8 ## q02f_d q02f_w q02f_m q33a income workhour workmonth wage ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 8 5 99 3 37.5 8 20 195. ## 2 4 4 99 5 87.5 4 16 1139. ## 3 10 99 20 12 375 10 20 1562. ## 4 9 99 15 9 225 9 15 1389. ## 5 12 5 99 10 275 12 20 955. ## 6 5 1 99 4 62.5 5 4 2604. 8.3.2 「〜万円以上」というカテゴリの処理 8.3.3 外れ値の処理 "],["reference.html", "Chapter 9 参考文献・ウェブサイト", " Chapter 9 参考文献・ウェブサイト Rはtidyverseパッケージの普及以前と以後で（望ましいとされる）文法が大きく変わっているため、tidyverseの使用を前提としたものを使うことを強くおすすめする。また、良書ではあるのだけれど、機械学習など社会学の関心とはやや離れた内容を念頭に置いたものも多く、ぴったりの書籍は少ない。こうしたなかで、日本語で読める書籍としては、以下の2冊がとくにおすすめできる。 浅野正彦・矢内勇生，『Rによる計量政治学入門』オーム社． 松村優哉・湯谷啓明・紀ノ定保礼・前田和寛，『改訂2版 Rユーザのための RStudio［実践］入門：tidyverseによるモダンな分析フローの世界』技術評論社． そのほか、ありがたいことに、ウェブページで解説を公開してくれている先生方もおられる。以下に挙げたウェブページはいずれもとてもすばらしく、参考になる。 矢内勇生先生のウェブページ：RとRStudioのインストール方法の解説 森知晴先生のウェブページ：卒業論文のためのR入門 宋財泫・矢内勇生先生のウェブページ：私たちのR：ベストプラクティスの探求 "]]
